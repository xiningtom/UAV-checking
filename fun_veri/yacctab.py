
# yacctab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'translation_unit_or_emptyleftLORleftLANDleftORleftXORleftANDleftEQNEleftGTGELTLEleftRSHIFTLSHIFTleftPLUSMINUSleftTIMESDIVIDEMOD_BOOL _COMPLEX AUTO BREAK CASE CHAR CONST CONTINUE DEFAULT DO DOUBLE ELSE ENUM EXTERN FLOAT FOR GOTO IF INLINE INT LONG REGISTER OFFSETOF RESTRICT RETURN SHORT SIGNED SIZEOF STATIC STRUCT SWITCH TYPEDEF UNION UNSIGNED VOID VOLATILE WHILE __INT128 ID TYPEID INT_CONST_DEC INT_CONST_OCT INT_CONST_HEX INT_CONST_BIN INT_CONST_CHAR FLOAT_CONST HEX_FLOAT_CONST CHAR_CONST WCHAR_CONST STRING_LITERAL WSTRING_LITERAL PLUS MINUS TIMES DIVIDE MOD OR AND NOT XOR LSHIFT RSHIFT LOR LAND LNOT LT LE GT GE EQ NE EQUALS TIMESEQUAL DIVEQUAL MODEQUAL PLUSEQUAL MINUSEQUAL LSHIFTEQUAL RSHIFTEQUAL ANDEQUAL XOREQUAL OREQUAL PLUSPLUS MINUSMINUS ARROW CONDOP LPAREN RPAREN LBRACKET RBRACKET LBRACE RBRACE COMMA PERIOD SEMI COLON ELLIPSIS PPHASH PPPRAGMA PPPRAGMASTRabstract_declarator_opt : empty\n| abstract_declaratorassignment_expression_opt : empty\n| assignment_expressionblock_item_list_opt : empty\n| block_item_listdeclaration_list_opt : empty\n| declaration_listdeclaration_specifiers_no_type_opt : empty\n| declaration_specifiers_no_typedesignation_opt : empty\n| designationexpression_opt : empty\n| expressionid_init_declarator_list_opt : empty\n| id_init_declarator_listidentifier_list_opt : empty\n| identifier_listinit_declarator_list_opt : empty\n| init_declarator_listinitializer_list_opt : empty\n| initializer_listparameter_type_list_opt : empty\n| parameter_type_liststruct_declarator_list_opt : empty\n| struct_declarator_listtype_qualifier_list_opt : empty\n| type_qualifier_list direct_id_declarator   : ID\n         direct_id_declarator   : LPAREN id_declarator RPAREN\n         direct_id_declarator   : direct_id_declarator LBRACKET type_qualifier_list_opt assignment_expression_opt RBRACKET\n         direct_id_declarator   : direct_id_declarator LBRACKET STATIC type_qualifier_list_opt assignment_expression RBRACKET\n                                    | direct_id_declarator LBRACKET type_qualifier_list STATIC assignment_expression RBRACKET\n         direct_id_declarator   : direct_id_declarator LBRACKET type_qualifier_list_opt TIMES RBRACKET\n         direct_id_declarator   : direct_id_declarator LPAREN parameter_type_list RPAREN\n                                    | direct_id_declarator LPAREN identifier_list_opt RPAREN\n         direct_typeid_declarator   : TYPEID\n         direct_typeid_declarator   : LPAREN typeid_declarator RPAREN\n         direct_typeid_declarator   : direct_typeid_declarator LBRACKET type_qualifier_list_opt assignment_expression_opt RBRACKET\n         direct_typeid_declarator   : direct_typeid_declarator LBRACKET STATIC type_qualifier_list_opt assignment_expression RBRACKET\n                                    | direct_typeid_declarator LBRACKET type_qualifier_list STATIC assignment_expression RBRACKET\n         direct_typeid_declarator   : direct_typeid_declarator LBRACKET type_qualifier_list_opt TIMES RBRACKET\n         direct_typeid_declarator   : direct_typeid_declarator LPAREN parameter_type_list RPAREN\n                                    | direct_typeid_declarator LPAREN identifier_list_opt RPAREN\n         direct_typeid_noparen_declarator   : TYPEID\n         direct_typeid_noparen_declarator   : direct_typeid_noparen_declarator LBRACKET type_qualifier_list_opt assignment_expression_opt RBRACKET\n         direct_typeid_noparen_declarator   : direct_typeid_noparen_declarator LBRACKET STATIC type_qualifier_list_opt assignment_expression RBRACKET\n                                    | direct_typeid_noparen_declarator LBRACKET type_qualifier_list STATIC assignment_expression RBRACKET\n         direct_typeid_noparen_declarator   : direct_typeid_noparen_declarator LBRACKET type_qualifier_list_opt TIMES RBRACKET\n         direct_typeid_noparen_declarator   : direct_typeid_noparen_declarator LPAREN parameter_type_list RPAREN\n                                    | direct_typeid_noparen_declarator LPAREN identifier_list_opt RPAREN\n         id_declarator  : direct_id_declarator\n         id_declarator  : pointer direct_id_declarator\n         typeid_declarator  : direct_typeid_declarator\n         typeid_declarator  : pointer direct_typeid_declarator\n         typeid_noparen_declarator  : direct_typeid_noparen_declarator\n         typeid_noparen_declarator  : pointer direct_typeid_noparen_declarator\n         translation_unit_or_empty   : translation_unit\n                                        | empty\n         translation_unit    : external_declaration\n         translation_unit    : translation_unit external_declaration\n         external_declaration    : function_definition\n         external_declaration    : declaration\n         external_declaration    : pp_directive\n                                    | pppragma_directive\n         external_declaration    : SEMI\n         pp_directive  : PPHASH\n         pppragma_directive      : PPPRAGMA\n                                    | PPPRAGMA PPPRAGMASTR\n         function_definition : id_declarator declaration_list_opt compound_statement\n         function_definition : declaration_specifiers id_declarator declaration_list_opt compound_statement\n         statement   : labeled_statement\n                        | expression_statement\n                        | compound_statement\n                        | selection_statement\n                        | iteration_statement\n                        | jump_statement\n                        | pppragma_directive\n         pragmacomp_or_statement     : pppragma_directive statement\n                                        | statement\n         decl_body : declaration_specifiers init_declarator_list_opt\n                      | declaration_specifiers_no_type id_init_declarator_list_opt\n         declaration : decl_body SEMI\n         declaration_list    : declaration\n                                | declaration_list declaration\n         declaration_specifiers_no_type  : type_qualifier declaration_specifiers_no_type_opt\n         declaration_specifiers_no_type  : storage_class_specifier declaration_specifiers_no_type_opt\n         declaration_specifiers_no_type  : function_specifier declaration_specifiers_no_type_opt\n         declaration_specifiers  : declaration_specifiers type_qualifier\n         declaration_specifiers  : declaration_specifiers storage_class_specifier\n         declaration_specifiers  : declaration_specifiers function_specifier\n         declaration_specifiers  : declaration_specifiers type_specifier_no_typeid\n         declaration_specifiers  : type_specifier\n         declaration_specifiers  : declaration_specifiers_no_type type_specifier\n         storage_class_specifier : AUTO\n                                    | REGISTER\n                                    | STATIC\n                                    | EXTERN\n                                    | TYPEDEF\n         function_specifier  : INLINE\n         type_specifier_no_typeid  : VOID\n                                      | _BOOL\n                                      | CHAR\n                                      | SHORT\n                                      | INT\n                                      | LONG\n                                      | FLOAT\n                                      | DOUBLE\n                                      | _COMPLEX\n                                      | SIGNED\n                                      | UNSIGNED\n                                      | __INT128\n         type_specifier  : typedef_name\n                            | enum_specifier\n                            | struct_or_union_specifier\n                            | type_specifier_no_typeid\n         type_qualifier  : CONST\n                            | RESTRICT\n                            | VOLATILE\n         init_declarator_list    : init_declarator\n                                    | init_declarator_list COMMA init_declarator\n         init_declarator : declarator\n                            | declarator EQUALS initializer\n         id_init_declarator_list    : id_init_declarator\n                                       | id_init_declarator_list COMMA init_declarator\n         id_init_declarator : id_declarator\n                               | id_declarator EQUALS initializer\n         specifier_qualifier_list    : specifier_qualifier_list type_specifier_no_typeid\n         specifier_qualifier_list    : specifier_qualifier_list type_qualifier\n         specifier_qualifier_list  : type_specifier\n         specifier_qualifier_list  : type_qualifier_list type_specifier\n         struct_or_union_specifier   : struct_or_union ID\n                                        | struct_or_union TYPEID\n         struct_or_union_specifier : struct_or_union brace_open struct_declaration_list brace_close\n                                      | struct_or_union brace_open brace_close\n         struct_or_union_specifier   : struct_or_union ID brace_open struct_declaration_list brace_close\n                                        | struct_or_union ID brace_open brace_close\n                                        | struct_or_union TYPEID brace_open struct_declaration_list brace_close\n                                        | struct_or_union TYPEID brace_open brace_close\n         struct_or_union : STRUCT\n                            | UNION\n         struct_declaration_list     : struct_declaration\n                                        | struct_declaration_list struct_declaration\n         struct_declaration : specifier_qualifier_list struct_declarator_list_opt SEMI\n         struct_declaration : SEMI\n         struct_declaration : pppragma_directive\n         struct_declarator_list  : struct_declarator\n                                    | struct_declarator_list COMMA struct_declarator\n         struct_declarator : declarator\n         struct_declarator   : declarator COLON constant_expression\n                                | COLON constant_expression\n         enum_specifier  : ENUM ID\n                            | ENUM TYPEID\n         enum_specifier  : ENUM brace_open enumerator_list brace_close\n         enum_specifier  : ENUM ID brace_open enumerator_list brace_close\n                            | ENUM TYPEID brace_open enumerator_list brace_close\n         enumerator_list : enumerator\n                            | enumerator_list COMMA\n                            | enumerator_list COMMA enumerator\n         enumerator  : ID\n                        | ID EQUALS constant_expression\n         declarator  : id_declarator\n                        | typeid_declarator\n         pointer : TIMES type_qualifier_list_opt\n                    | TIMES type_qualifier_list_opt pointer\n         type_qualifier_list : type_qualifier\n                                | type_qualifier_list type_qualifier\n         parameter_type_list : parameter_list\n                                | parameter_list COMMA ELLIPSIS\n         parameter_list  : parameter_declaration\n                            | parameter_list COMMA parameter_declaration\n         parameter_declaration   : declaration_specifiers id_declarator\n                                    | declaration_specifiers typeid_noparen_declarator\n         parameter_declaration   : declaration_specifiers abstract_declarator_opt\n         identifier_list : identifier\n                            | identifier_list COMMA identifier\n         initializer : assignment_expression\n         initializer : brace_open initializer_list_opt brace_close\n                        | brace_open initializer_list COMMA brace_close\n         initializer_list    : designation_opt initializer\n                                | initializer_list COMMA designation_opt initializer\n         designation : designator_list EQUALS\n         designator_list : designator\n                            | designator_list designator\n         designator  : LBRACKET constant_expression RBRACKET\n                        | PERIOD identifier\n         type_name   : specifier_qualifier_list abstract_declarator_opt\n         abstract_declarator     : pointer\n         abstract_declarator     : pointer direct_abstract_declarator\n         abstract_declarator     : direct_abstract_declarator\n         direct_abstract_declarator  : LPAREN abstract_declarator RPAREN  direct_abstract_declarator  : direct_abstract_declarator LBRACKET assignment_expression_opt RBRACKET\n         direct_abstract_declarator  : LBRACKET type_qualifier_list_opt assignment_expression_opt RBRACKET\n         direct_abstract_declarator  : direct_abstract_declarator LBRACKET TIMES RBRACKET\n         direct_abstract_declarator  : LBRACKET TIMES RBRACKET\n         direct_abstract_declarator  : direct_abstract_declarator LPAREN parameter_type_list_opt RPAREN\n         direct_abstract_declarator  : LPAREN parameter_type_list_opt RPAREN\n         block_item  : declaration\n                        | statement\n         block_item_list : block_item\n                            | block_item_list block_item\n         compound_statement : brace_open block_item_list_opt brace_close  labeled_statement : ID COLON pragmacomp_or_statement  labeled_statement : CASE constant_expression COLON pragmacomp_or_statement  labeled_statement : DEFAULT COLON pragmacomp_or_statement  selection_statement : IF LPAREN expression RPAREN pragmacomp_or_statement  selection_statement : IF LPAREN expression RPAREN statement ELSE pragmacomp_or_statement  selection_statement : SWITCH LPAREN expression RPAREN pragmacomp_or_statement  iteration_statement : WHILE LPAREN expression RPAREN pragmacomp_or_statement  iteration_statement : DO pragmacomp_or_statement WHILE LPAREN expression RPAREN SEMI  iteration_statement : FOR LPAREN expression_opt SEMI expression_opt SEMI expression_opt RPAREN pragmacomp_or_statement  iteration_statement : FOR LPAREN declaration expression_opt SEMI expression_opt RPAREN pragmacomp_or_statement  jump_statement  : GOTO ID SEMI  jump_statement  : BREAK SEMI  jump_statement  : CONTINUE SEMI  jump_statement  : RETURN expression SEMI\n                            | RETURN SEMI\n         expression_statement : expression_opt SEMI  expression  : assignment_expression\n                        | expression COMMA assignment_expression\n         typedef_name : TYPEID  assignment_expression   : conditional_expression\n                                    | unary_expression assignment_operator assignment_expression\n         assignment_operator : EQUALS\n                                | XOREQUAL\n                                | TIMESEQUAL\n                                | DIVEQUAL\n                                | MODEQUAL\n                                | PLUSEQUAL\n                                | MINUSEQUAL\n                                | LSHIFTEQUAL\n                                | RSHIFTEQUAL\n                                | ANDEQUAL\n                                | OREQUAL\n         constant_expression : conditional_expression  conditional_expression  : binary_expression\n                                    | binary_expression CONDOP expression COLON conditional_expression\n         binary_expression   : cast_expression\n                                | binary_expression TIMES binary_expression\n                                | binary_expression DIVIDE binary_expression\n                                | binary_expression MOD binary_expression\n                                | binary_expression PLUS binary_expression\n                                | binary_expression MINUS binary_expression\n                                | binary_expression RSHIFT binary_expression\n                                | binary_expression LSHIFT binary_expression\n                                | binary_expression LT binary_expression\n                                | binary_expression LE binary_expression\n                                | binary_expression GE binary_expression\n                                | binary_expression GT binary_expression\n                                | binary_expression EQ binary_expression\n                                | binary_expression NE binary_expression\n                                | binary_expression AND binary_expression\n                                | binary_expression OR binary_expression\n                                | binary_expression XOR binary_expression\n                                | binary_expression LAND binary_expression\n                                | binary_expression LOR binary_expression\n         cast_expression : unary_expression  cast_expression : LPAREN type_name RPAREN cast_expression  unary_expression    : postfix_expression  unary_expression    : PLUSPLUS unary_expression\n                                | MINUSMINUS unary_expression\n                                | unary_operator cast_expression\n         unary_expression    : SIZEOF unary_expression\n                                | SIZEOF LPAREN type_name RPAREN\n         unary_operator  : AND\n                            | TIMES\n                            | PLUS\n                            | MINUS\n                            | NOT\n                            | LNOT\n         postfix_expression  : primary_expression  postfix_expression  : postfix_expression LBRACKET expression RBRACKET  postfix_expression  : postfix_expression LPAREN argument_expression_list RPAREN\n                                | postfix_expression LPAREN RPAREN\n         postfix_expression  : postfix_expression PERIOD ID\n                                | postfix_expression PERIOD TYPEID\n                                | postfix_expression ARROW ID\n                                | postfix_expression ARROW TYPEID\n         postfix_expression  : postfix_expression PLUSPLUS\n                                | postfix_expression MINUSMINUS\n         postfix_expression  : LPAREN type_name RPAREN brace_open initializer_list brace_close\n                                | LPAREN type_name RPAREN brace_open initializer_list COMMA brace_close\n         primary_expression  : identifier  primary_expression  : constant  primary_expression  : unified_string_literal\n                                | unified_wstring_literal\n         primary_expression  : LPAREN expression RPAREN  primary_expression  : OFFSETOF LPAREN type_name COMMA offsetof_member_designator RPAREN\n         offsetof_member_designator : identifier\n                                         | offsetof_member_designator PERIOD identifier\n                                         | offsetof_member_designator LBRACKET expression RBRACKET\n         argument_expression_list    : assignment_expression\n                                        | argument_expression_list COMMA assignment_expression\n         identifier  : ID  constant    : INT_CONST_DEC\n                        | INT_CONST_OCT\n                        | INT_CONST_HEX\n                        | INT_CONST_BIN\n                        | INT_CONST_CHAR\n         constant    : FLOAT_CONST\n                        | HEX_FLOAT_CONST\n         constant    : CHAR_CONST\n                        | WCHAR_CONST\n         unified_string_literal  : STRING_LITERAL\n                                    | unified_string_literal STRING_LITERAL\n         unified_wstring_literal : WSTRING_LITERAL\n                                    | unified_wstring_literal WSTRING_LITERAL\n         brace_open  :   LBRACE\n         brace_close :   RBRACE\n        empty : '
    
_lr_action_items = {'LPAREN':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,17,20,21,22,23,24,25,26,27,28,29,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,47,48,49,53,54,56,58,59,62,63,64,66,70,71,72,73,74,75,76,77,78,79,80,82,87,90,92,93,94,95,96,97,98,99,104,105,107,109,110,112,113,114,120,121,123,130,132,133,134,139,140,142,143,148,149,150,154,155,156,157,158,159,160,161,164,165,166,167,169,170,171,172,173,174,175,176,177,178,180,181,182,184,185,186,187,188,189,190,192,193,195,197,201,202,203,207,208,209,211,215,216,220,221,222,224,227,228,229,234,236,238,239,240,242,246,248,249,250,251,254,255,256,257,258,259,260,261,263,264,265,266,267,269,270,273,274,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,309,310,312,313,315,317,320,321,323,325,326,331,335,339,342,344,346,347,348,353,354,358,359,360,361,362,363,365,367,368,370,371,372,373,374,375,376,377,379,381,383,384,386,387,388,389,413,416,417,419,420,424,425,430,431,434,435,436,437,441,442,443,447,449,450,452,455,456,457,458,459,460,461,464,466,467,468,470,472,473,475,476,477,479,480,481,482,483,484,485,487,488,489,490,491,499,500,503,504,505,506,507,509,510,511,513,514,515,516,518,520,524,525,526,528,529,530,],[1,1,56,-103,-65,-112,-107,-63,-310,-310,-64,-119,-113,-310,-101,-66,-110,1,-104,-117,-95,89,-29,-118,-114,-111,-109,-310,-62,-106,-60,1,-105,-96,-108,-97,-68,-116,-100,-115,-98,-67,-99,1,-102,-221,-93,56,-90,-91,-89,108,-92,56,-37,-87,-9,-10,-28,-166,-27,-164,-88,-152,-308,-153,-94,-310,-133,-132,-86,-61,-69,89,-83,56,1,-30,56,-310,108,158,-167,-165,56,158,202,-294,-28,158,-310,-309,56,-135,-130,158,-70,-38,-28,158,-310,-71,158,-302,274,-267,-265,-306,-298,-284,-296,307,-285,310,-304,-268,316,317,-301,-286,-295,-297,-299,-310,-269,-303,-283,-271,-270,-266,307,-300,317,-154,-35,202,341,-310,-45,345,202,-36,158,-266,158,-131,-134,-129,-128,317,-139,-137,-78,-199,158,-200,-72,368,-73,317,370,-198,-76,-294,374,375,-75,158,-77,-74,158,-43,-44,158,-266,158,388,158,317,317,317,317,317,317,317,317,158,317,317,317,317,317,317,317,317,317,317,-225,-232,-234,-226,-224,-233,-229,-230,158,-231,-228,-227,158,-305,158,158,-280,-279,158,-307,317,-11,158,-12,-155,-156,202,-310,158,158,341,345,-31,-34,56,317,-138,-136,-214,-201,158,-218,158,158,-215,-202,158,158,158,158,-80,158,-217,-39,-42,-287,317,388,388,-274,-277,-278,-275,-276,-310,-182,-197,-191,-28,158,-310,-195,-266,-33,-32,-213,158,158,-203,-79,491,-205,-216,-41,-40,-310,317,158,-273,-272,317,158,-11,-50,-51,158,-266,158,-193,-196,-192,-194,158,-204,158,158,158,158,-46,-49,158,-209,-208,-80,-206,-310,-281,158,-288,-48,-47,158,158,-282,158,-207,-210,158,-212,-211,]),'BREAK':([40,80,96,98,139,148,238,239,240,242,246,249,254,255,259,260,261,263,362,363,367,371,372,373,376,377,379,381,447,450,452,455,457,458,487,488,489,490,504,505,506,507,518,524,525,526,528,529,530,],[-68,-308,-69,-83,-309,237,-78,-199,237,-200,-72,-73,-198,-76,-75,237,-77,-74,-214,-201,-218,-215,-202,237,237,-80,237,-217,-213,237,-203,-79,-205,-216,-204,237,237,237,-209,-208,-80,-206,237,237,-207,-210,237,-212,-211,]),'SIZEOF':([11,22,26,40,74,75,76,80,90,96,98,109,112,113,121,132,133,134,139,148,154,155,156,158,160,161,164,170,174,176,184,185,189,190,192,195,207,216,220,221,229,238,239,240,242,246,249,250,254,255,259,260,261,263,264,267,269,270,274,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,310,312,317,321,323,325,326,342,344,346,359,362,363,365,367,368,370,371,372,373,374,375,376,377,379,381,387,424,425,434,435,436,441,447,449,450,452,455,457,458,461,464,466,470,472,473,477,479,480,485,487,488,489,490,491,503,504,505,506,507,509,511,516,518,524,525,526,528,529,530,],[-119,-117,-118,-68,-28,-166,-27,-308,-310,-69,-83,-310,160,-167,160,-28,160,-310,-309,160,-28,160,-310,160,160,-267,-265,160,-268,160,-310,-269,-270,-266,160,160,-310,160,-266,160,160,-78,-199,160,-200,-72,-73,160,-198,-76,-75,160,-77,-74,160,160,-266,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,-225,-232,-234,-226,-224,-233,-229,-230,160,-231,-228,-227,160,160,160,160,160,-11,160,-12,-310,160,160,160,-214,-201,160,-218,160,160,-215,-202,160,160,160,160,-80,160,-217,160,-310,-182,-28,160,-310,-266,-213,160,160,-203,-79,-205,-216,-310,160,160,160,160,-11,160,-266,160,160,-204,160,160,160,160,160,-209,-208,-80,-206,-310,160,160,160,160,-207,-210,160,-212,-211,]),'OR':([130,139,159,162,163,165,166,167,169,171,172,173,177,178,179,180,181,182,186,187,188,193,256,275,308,309,313,315,318,319,320,330,386,392,393,394,395,396,397,398,399,401,402,403,404,405,406,407,408,409,410,413,416,417,419,420,462,463,467,468,510,513,520,],[-294,-309,-302,285,-257,-306,-298,-284,-296,-285,-259,-304,-301,-286,-238,-295,-297,-299,-303,-283,-271,-300,-294,-263,-261,-305,-280,-279,-257,-262,-307,-260,-287,285,-242,-240,-246,-252,-247,-244,-251,-253,-248,-239,-241,-254,-250,-243,-245,285,-249,-274,-277,-278,-275,-276,-258,-264,-273,-272,-281,-288,-282,]),'LOR':([130,139,159,162,163,165,166,167,169,171,172,173,177,178,179,180,181,182,186,187,188,193,256,275,308,309,313,315,318,319,320,330,386,392,393,394,395,396,397,398,399,401,402,403,404,405,406,407,408,409,410,413,416,417,419,420,462,463,467,468,510,513,520,],[-294,-309,-302,276,-257,-306,-298,-284,-296,-285,-259,-304,-301,-286,-238,-295,-297,-299,-303,-283,-271,-300,-294,-263,-261,-305,-280,-279,-257,-262,-307,-260,-287,-256,-242,-240,-246,-252,-247,-244,-251,-253,-248,-239,-241,-254,-250,-243,-245,-255,-249,-274,-277,-278,-275,-276,-258,-264,-273,-272,-281,-288,-282,]),'FLOAT':([0,2,3,4,5,6,7,8,10,11,12,13,14,15,17,20,21,22,23,24,25,26,27,28,29,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,47,49,52,53,54,58,59,62,64,68,71,72,73,75,78,79,80,82,87,89,91,92,93,94,95,96,97,98,99,100,101,104,105,108,113,123,129,135,136,137,138,139,140,141,142,143,144,145,147,148,149,157,158,197,201,202,214,215,222,223,224,227,228,233,234,235,236,238,239,240,242,246,249,254,255,259,261,263,273,274,307,316,317,331,335,341,345,353,354,356,360,361,362,363,367,368,371,372,376,377,381,388,442,443,447,452,455,457,458,487,504,505,506,507,525,526,529,530,],[6,6,-103,-65,-112,-107,-63,-310,-64,-119,-113,-310,-101,-66,-110,6,-104,-117,-95,-52,-29,-118,-114,-111,-109,-310,-62,-106,-60,6,-105,-96,-108,-97,-68,-116,-100,-115,-98,-67,-99,-102,6,-221,-93,-90,-91,-89,-92,6,-87,-9,-10,-166,-88,-152,-308,-153,-94,6,6,-133,-132,-86,-61,-69,-53,-83,6,-84,6,6,-30,6,-167,6,6,6,-146,6,-145,-309,6,-142,-135,-130,6,6,-85,6,-70,-71,6,-154,-35,6,6,-36,-131,-143,-134,-129,-128,6,-139,6,-137,-78,-199,6,-200,-72,-73,-198,-76,-75,-77,-74,6,6,6,6,6,-155,-156,6,6,-31,-34,-144,-138,-136,-214,-201,-218,6,-215,-202,-78,-80,-217,6,-33,-32,-213,-203,-79,-205,-216,-204,-209,-208,-80,-206,-207,-210,-212,-211,]),'MODEQUAL':([130,139,159,163,165,166,167,169,171,172,173,177,178,180,181,182,186,187,188,193,256,275,308,309,313,315,318,319,320,330,386,413,416,417,419,420,462,463,467,468,510,513,520,],[-294,-309,-302,305,-306,-298,-284,-296,-285,-259,-304,-301,-286,-295,-297,-299,-303,-283,-271,-300,-294,-263,-261,-305,-280,-279,-257,-262,-307,-260,-287,-274,-277,-278,-275,-276,-258,-264,-273,-272,-281,-288,-282,]),'SIGNED':([0,2,3,4,5,6,7,8,10,11,12,13,14,15,17,20,21,22,23,24,25,26,27,28,29,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,47,49,52,53,54,58,59,62,64,68,71,72,73,75,78,79,80,82,87,89,91,92,93,94,95,96,97,98,99,100,101,104,105,108,113,123,129,135,136,137,138,139,140,141,142,143,144,145,147,148,149,157,158,197,201,202,214,215,222,223,224,227,228,233,234,235,236,238,239,240,242,246,249,254,255,259,261,263,273,274,307,316,317,331,335,341,345,353,354,356,360,361,362,363,367,368,371,372,376,377,381,388,442,443,447,452,455,457,458,487,504,505,506,507,525,526,529,530,],[17,17,-103,-65,-112,-107,-63,-310,-64,-119,-113,-310,-101,-66,-110,17,-104,-117,-95,-52,-29,-118,-114,-111,-109,-310,-62,-106,-60,17,-105,-96,-108,-97,-68,-116,-100,-115,-98,-67,-99,-102,17,-221,-93,-90,-91,-89,-92,17,-87,-9,-10,-166,-88,-152,-308,-153,-94,17,17,-133,-132,-86,-61,-69,-53,-83,17,-84,17,17,-30,17,-167,17,17,17,-146,17,-145,-309,17,-142,-135,-130,17,17,-85,17,-70,-71,17,-154,-35,17,17,-36,-131,-143,-134,-129,-128,17,-139,17,-137,-78,-199,17,-200,-72,-73,-198,-76,-75,-77,-74,17,17,17,17,17,-155,-156,17,17,-31,-34,-144,-138,-136,-214,-201,-218,17,-215,-202,-78,-80,-217,17,-33,-32,-213,-203,-79,-205,-216,-204,-209,-208,-80,-206,-207,-210,-212,-211,]),'TIMES':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,17,20,21,22,23,26,27,28,29,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,47,49,53,54,56,58,59,62,64,71,72,73,74,75,76,77,78,79,80,82,87,90,92,93,94,95,96,98,99,104,107,109,112,113,120,121,123,130,132,133,134,139,140,142,143,148,149,154,155,156,157,158,159,160,161,162,163,164,165,166,167,169,170,171,172,173,174,176,177,178,179,180,181,182,184,185,186,187,188,189,190,192,193,195,197,202,207,216,220,221,222,224,227,228,229,234,236,238,239,240,242,246,249,250,254,255,256,259,260,261,263,264,267,269,270,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,312,313,315,317,318,319,320,321,323,325,326,330,331,335,342,344,346,358,359,360,361,362,363,365,367,368,370,371,372,373,374,375,376,377,379,381,386,387,388,392,393,394,395,396,397,398,399,401,402,403,404,405,406,407,408,409,410,413,416,417,419,420,424,425,434,435,436,441,447,449,450,452,455,457,458,461,462,463,464,466,467,468,470,472,473,477,479,480,485,487,488,489,490,491,503,504,505,506,507,509,510,511,513,516,518,520,524,525,526,528,529,530,],[9,9,9,-103,-65,-112,-107,-63,-310,-310,-64,-119,-113,-310,-101,-66,-110,9,-104,-117,-95,-118,-114,-111,-109,-310,-62,-106,-60,9,-105,-96,-108,-97,-68,-116,-100,-115,-98,-67,-99,-102,-221,-93,9,-90,-91,-89,-92,-87,-9,-10,-28,-166,-27,9,-88,-152,-308,-153,-94,-310,-133,-132,-86,-61,-69,-83,9,9,9,-310,190,-167,9,190,9,-294,-28,220,-310,-309,9,-135,-130,190,-70,-28,269,-310,-71,190,-302,190,-267,287,-257,-265,-306,-298,-284,-296,190,-285,-259,-304,-268,190,-301,-286,-238,-295,-297,-299,-310,-269,-303,-283,-271,-270,-266,190,-300,190,-154,9,343,190,-266,190,-131,-134,-129,-128,190,-139,-137,-78,-199,190,-200,-72,-73,190,-198,-76,-294,-75,190,-77,-74,190,190,-266,190,9,190,-263,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,190,-225,-232,-234,-226,-224,-233,-229,-230,190,-231,-228,-227,190,-261,-305,190,190,-280,-279,190,-257,-262,-307,190,-11,190,-12,-260,-155,-156,-310,190,441,9,190,-138,-136,-214,-201,190,-218,190,190,-215,-202,190,190,190,190,-80,190,-217,-287,190,9,287,287,-240,287,287,287,287,287,287,287,-239,-241,287,287,287,287,287,287,-274,-277,-278,-275,-276,-310,-182,-28,479,-310,-266,-213,190,190,-203,-79,-205,-216,-310,-258,-264,190,190,-273,-272,190,190,-11,190,-266,190,190,-204,190,190,190,190,190,-209,-208,-80,-206,-310,-281,190,-288,190,190,-282,190,-207,-210,190,-212,-211,]),'LE':([130,139,159,162,163,165,166,167,169,171,172,173,177,178,179,180,181,182,186,187,188,193,256,275,308,309,313,315,318,319,320,330,386,392,393,394,395,396,397,398,399,401,402,403,404,405,406,407,408,409,410,413,416,417,419,420,462,463,467,468,510,513,520,],[-294,-309,-302,281,-257,-306,-298,-284,-296,-285,-259,-304,-301,-286,-238,-295,-297,-299,-303,-283,-271,-300,-294,-263,-261,-305,-280,-279,-257,-262,-307,-260,-287,281,-242,-240,-246,281,-247,-244,281,281,-248,-239,-241,281,281,-243,-245,281,-249,-274,-277,-278,-275,-276,-258,-264,-273,-272,-281,-288,-282,]),'RSHIFT':([130,139,159,162,163,165,166,167,169,171,172,173,177,178,179,180,181,182,186,187,188,193,256,275,308,309,313,315,318,319,320,330,386,392,393,394,395,396,397,398,399,401,402,403,404,405,406,407,408,409,410,413,416,417,419,420,462,463,467,468,510,513,520,],[-294,-309,-302,282,-257,-306,-298,-284,-296,-285,-259,-304,-301,-286,-238,-295,-297,-299,-303,-283,-271,-300,-294,-263,-261,-305,-280,-279,-257,-262,-307,-260,-287,282,-242,-240,282,282,282,-244,282,282,282,-239,-241,282,282,-243,-245,282,282,-274,-277,-278,-275,-276,-258,-264,-273,-272,-281,-288,-282,]),'INT_CONST_BIN':([11,22,26,40,74,75,76,80,90,96,98,109,112,113,121,132,133,134,139,148,154,155,156,158,160,161,164,170,174,176,184,185,189,190,192,195,207,216,220,221,229,238,239,240,242,246,249,250,254,255,259,260,261,263,264,267,269,270,274,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,310,312,317,321,323,325,326,342,344,346,359,362,363,365,367,368,370,371,372,373,374,375,376,377,379,381,387,424,425,434,435,436,441,447,449,450,452,455,457,458,461,464,466,470,472,473,477,479,480,485,487,488,489,490,491,503,504,505,506,507,509,511,516,518,524,525,526,528,529,530,],[-119,-117,-118,-68,-28,-166,-27,-308,-310,-69,-83,-310,166,-167,166,-28,166,-310,-309,166,-28,166,-310,166,166,-267,-265,166,-268,166,-310,-269,-270,-266,166,166,-310,166,-266,166,166,-78,-199,166,-200,-72,-73,166,-198,-76,-75,166,-77,-74,166,166,-266,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,-225,-232,-234,-226,-224,-233,-229,-230,166,-231,-228,-227,166,166,166,166,166,-11,166,-12,-310,166,166,166,-214,-201,166,-218,166,166,-215,-202,166,166,166,166,-80,166,-217,166,-310,-182,-28,166,-310,-266,-213,166,166,-203,-79,-205,-216,-310,166,166,166,166,-11,166,-266,166,166,-204,166,166,166,166,166,-209,-208,-80,-206,-310,166,166,166,166,-207,-210,166,-212,-211,]),'CONDOP':([130,139,159,162,163,165,166,167,169,171,172,173,177,178,179,180,181,182,186,187,188,193,256,275,308,309,313,315,318,319,320,330,386,392,393,394,395,396,397,398,399,401,402,403,404,405,406,407,408,409,410,413,416,417,419,420,462,463,467,468,510,513,520,],[-294,-309,-302,284,-257,-306,-298,-284,-296,-285,-259,-304,-301,-286,-238,-295,-297,-299,-303,-283,-271,-300,-294,-263,-261,-305,-280,-279,-257,-262,-307,-260,-287,-256,-242,-240,-246,-252,-247,-244,-251,-253,-248,-239,-241,-254,-250,-243,-245,-255,-249,-274,-277,-278,-275,-276,-258,-264,-273,-272,-281,-288,-282,]),'XOREQUAL':([130,139,159,163,165,166,167,169,171,172,173,177,178,180,181,182,186,187,188,193,256,275,308,309,313,315,318,319,320,330,386,413,416,417,419,420,462,463,467,468,510,513,520,],[-294,-309,-302,295,-306,-298,-284,-296,-285,-259,-304,-301,-286,-295,-297,-299,-303,-283,-271,-300,-294,-263,-261,-305,-280,-279,-257,-262,-307,-260,-287,-274,-277,-278,-275,-276,-258,-264,-273,-272,-281,-288,-282,]),'GE':([130,139,159,162,163,165,166,167,169,171,172,173,177,178,179,180,181,182,186,187,188,193,256,275,308,309,313,315,318,319,320,330,386,392,393,394,395,396,397,398,399,401,402,403,404,405,406,407,408,409,410,413,416,417,419,420,462,463,467,468,510,513,520,],[-294,-309,-302,286,-257,-306,-298,-284,-296,-285,-259,-304,-301,-286,-238,-295,-297,-299,-303,-283,-271,-300,-294,-263,-261,-305,-280,-279,-257,-262,-307,-260,-287,286,-242,-240,-246,286,-247,-244,286,286,-248,-239,-241,286,286,-243,-245,286,-249,-274,-277,-278,-275,-276,-258,-264,-273,-272,-281,-288,-282,]),'CHAR':([0,2,3,4,5,6,7,8,10,11,12,13,14,15,17,20,21,22,23,24,25,26,27,28,29,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,47,49,52,53,54,58,59,62,64,68,71,72,73,75,78,79,80,82,87,89,91,92,93,94,95,96,97,98,99,100,101,104,105,108,113,123,129,135,136,137,138,139,140,141,142,143,144,145,147,148,149,157,158,197,201,202,214,215,222,223,224,227,228,233,234,235,236,238,239,240,242,246,249,254,255,259,261,263,273,274,307,316,317,331,335,341,345,353,354,356,360,361,362,363,367,368,371,372,376,377,381,388,442,443,447,452,455,457,458,487,504,505,506,507,525,526,529,530,],[3,3,-103,-65,-112,-107,-63,-310,-64,-119,-113,-310,-101,-66,-110,3,-104,-117,-95,-52,-29,-118,-114,-111,-109,-310,-62,-106,-60,3,-105,-96,-108,-97,-68,-116,-100,-115,-98,-67,-99,-102,3,-221,-93,-90,-91,-89,-92,3,-87,-9,-10,-166,-88,-152,-308,-153,-94,3,3,-133,-132,-86,-61,-69,-53,-83,3,-84,3,3,-30,3,-167,3,3,3,-146,3,-145,-309,3,-142,-135,-130,3,3,-85,3,-70,-71,3,-154,-35,3,3,-36,-131,-143,-134,-129,-128,3,-139,3,-137,-78,-199,3,-200,-72,-73,-198,-76,-75,-77,-74,3,3,3,3,3,-155,-156,3,3,-31,-34,-144,-138,-136,-214,-201,-218,3,-215,-202,-78,-80,-217,3,-33,-32,-213,-203,-79,-205,-216,-204,-209,-208,-80,-206,-207,-210,-212,-211,]),'ENUM':([0,4,7,8,10,11,13,15,20,22,23,24,25,26,31,32,34,35,37,39,40,42,44,45,47,52,68,71,72,73,75,78,80,89,91,94,95,96,97,98,100,101,104,105,108,113,129,135,136,137,138,139,141,144,145,147,148,149,157,158,201,202,214,215,223,233,235,238,239,240,242,246,249,254,255,259,261,263,274,307,316,317,341,345,353,354,356,362,363,367,368,371,372,376,377,381,388,442,443,447,452,455,457,458,487,504,505,506,507,525,526,529,530,],[18,-65,-63,-310,-64,-119,-310,-66,18,-117,-95,-52,-29,-118,-310,-62,-60,18,-96,-97,-68,-100,-98,-67,-99,18,18,-87,-9,-10,-166,-88,-308,18,18,-86,-61,-69,-53,-83,-84,18,18,-30,18,-167,18,18,-146,18,-145,-309,-142,18,18,-85,18,-70,-71,18,-35,18,18,-36,-143,18,18,-78,-199,18,-200,-72,-73,-198,-76,-75,-77,-74,18,18,18,18,18,18,-31,-34,-144,-214,-201,-218,18,-215,-202,-78,-80,-217,18,-33,-32,-213,-203,-79,-205,-216,-204,-209,-208,-80,-206,-207,-210,-212,-211,]),'COMMA':([3,5,6,9,11,12,14,17,21,22,23,24,25,26,27,28,29,33,36,37,38,39,41,42,43,44,47,49,53,54,57,58,59,61,62,63,64,67,68,69,70,74,75,76,77,79,82,83,86,87,88,92,93,97,105,110,113,114,116,117,118,123,124,125,126,127,130,139,142,143,146,150,151,159,162,163,165,166,167,168,169,171,172,173,177,178,179,180,181,182,183,186,187,188,191,193,194,196,197,198,199,200,201,203,204,205,206,208,209,210,211,212,215,222,224,226,227,228,230,232,234,236,241,247,256,265,266,271,273,275,308,309,313,315,318,319,320,322,330,331,332,333,334,335,347,348,349,350,353,354,357,360,361,380,383,384,386,389,390,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,413,414,415,416,417,418,419,420,421,427,429,430,431,437,442,443,444,445,446,451,453,454,459,460,462,463,467,468,474,475,476,481,482,483,484,492,493,494,497,499,500,508,510,513,514,515,520,521,],[-103,-112,-107,-310,-119,-113,-101,-110,-104,-117,-95,-52,-29,-118,-114,-111,-109,-106,-105,-96,-108,-97,-116,-100,-115,-98,-99,-102,-221,-93,-163,-90,-91,107,-89,-54,-92,-120,-162,-122,-37,-28,-166,-27,-164,-152,-153,120,-124,-94,-126,-133,-132,-53,-30,-55,-167,-165,-160,196,-157,-310,-170,-175,213,214,-294,-309,-135,-130,-162,-38,-121,-302,-236,-257,-306,-298,-284,-222,-296,-285,-259,-304,-301,-286,-238,-295,-297,-299,-177,-303,-283,-271,-123,-300,196,-158,-154,196,-125,-127,-35,-56,-173,-1,-174,-45,-190,-2,-188,-172,-36,-131,-134,-147,-129,-128,358,-149,-139,-137,365,-219,-294,-43,-44,365,-310,-263,-261,-305,-280,-279,-257,-262,-307,424,-260,-155,-235,-161,-159,-156,-57,-189,-176,-171,-31,-34,-151,-138,-136,365,-39,-42,-287,-188,-187,-256,-242,-240,-246,-252,-247,-244,-251,365,-253,-248,-239,-241,-254,-250,-243,-245,-255,-249,-223,-274,-292,466,-277,-278,365,-275,-276,469,-180,-178,-197,-191,-195,-33,-32,-148,-150,-220,365,365,365,-41,-40,-258,-264,-273,-272,-179,-50,-51,-193,-196,-192,-194,509,-237,-293,-181,-46,-49,365,-281,-288,-48,-47,-282,365,]),'SHORT':([0,2,3,4,5,6,7,8,10,11,12,13,14,15,17,20,21,22,23,24,25,26,27,28,29,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,47,49,52,53,54,58,59,62,64,68,71,72,73,75,78,79,80,82,87,89,91,92,93,94,95,96,97,98,99,100,101,104,105,108,113,123,129,135,136,137,138,139,140,141,142,143,144,145,147,148,149,157,158,197,201,202,214,215,222,223,224,227,228,233,234,235,236,238,239,240,242,246,249,254,255,259,261,263,273,274,307,316,317,331,335,341,345,353,354,356,360,361,362,363,367,368,371,372,376,377,381,388,442,443,447,452,455,457,458,487,504,505,506,507,525,526,529,530,],[21,21,-103,-65,-112,-107,-63,-310,-64,-119,-113,-310,-101,-66,-110,21,-104,-117,-95,-52,-29,-118,-114,-111,-109,-310,-62,-106,-60,21,-105,-96,-108,-97,-68,-116,-100,-115,-98,-67,-99,-102,21,-221,-93,-90,-91,-89,-92,21,-87,-9,-10,-166,-88,-152,-308,-153,-94,21,21,-133,-132,-86,-61,-69,-53,-83,21,-84,21,21,-30,21,-167,21,21,21,-146,21,-145,-309,21,-142,-135,-130,21,21,-85,21,-70,-71,21,-154,-35,21,21,-36,-131,-143,-134,-129,-128,21,-139,21,-137,-78,-199,21,-200,-72,-73,-198,-76,-75,-77,-74,21,21,21,21,21,-155,-156,21,21,-31,-34,-144,-138,-136,-214,-201,-218,21,-215,-202,-78,-80,-217,21,-33,-32,-213,-203,-79,-205,-216,-204,-209,-208,-80,-206,-207,-210,-212,-211,]),'RBRACKET':([11,22,26,74,75,76,90,109,113,130,132,133,139,154,155,159,162,163,165,166,167,168,169,171,172,173,177,178,179,180,181,182,186,187,188,193,207,217,218,219,220,247,268,269,275,308,309,313,315,318,319,320,330,332,342,343,344,346,352,355,382,385,386,392,393,394,395,396,397,398,399,401,402,403,404,405,406,407,408,409,410,411,413,416,417,418,419,420,423,434,435,438,440,441,446,462,463,467,468,478,479,493,498,501,510,513,520,521,],[-119,-117,-118,-28,-166,-27,-310,-310,-167,-294,-28,-310,-309,-28,-310,-302,-236,-257,-306,-298,-284,-222,-296,-285,-259,-304,-301,-286,-238,-295,-297,-299,-303,-283,-271,-300,-310,-3,-4,353,354,-219,383,384,-263,-261,-305,-280,-279,-257,-262,-307,-260,-235,-310,437,-310,-310,442,443,459,460,-287,-256,-242,-240,-246,-252,-247,-244,-251,-253,-248,-239,-241,-254,-250,-243,-245,-255,-249,-223,-274,-277,-278,468,-275,-276,471,-28,-310,481,483,484,-220,-258,-264,-273,-272,499,500,-237,514,515,-281,-288,-282,527,]),'PLUSEQUAL':([130,139,159,163,165,166,167,169,171,172,173,177,178,180,181,182,186,187,188,193,256,275,308,309,313,315,318,319,320,330,386,413,416,417,419,420,462,463,467,468,510,513,520,],[-294,-309,-302,301,-306,-298,-284,-296,-285,-259,-304,-301,-286,-295,-297,-299,-303,-283,-271,-300,-294,-263,-261,-305,-280,-279,-257,-262,-307,-260,-287,-274,-277,-278,-275,-276,-258,-264,-273,-272,-281,-288,-282,]),'OREQUAL':([130,139,159,163,165,166,167,169,171,172,173,177,178,180,181,182,186,187,188,193,256,275,308,309,313,315,318,319,320,330,386,413,416,417,419,420,462,463,467,468,510,513,520,],[-294,-309,-302,297,-306,-298,-284,-296,-285,-259,-304,-301,-286,-295,-297,-299,-303,-283,-271,-300,-294,-263,-261,-305,-280,-279,-257,-262,-307,-260,-287,-274,-277,-278,-275,-276,-258,-264,-273,-272,-281,-288,-282,]),'MINUS':([11,22,26,40,74,75,76,80,90,96,98,109,112,113,121,130,132,133,134,139,148,154,155,156,158,159,160,161,162,163,164,165,166,167,169,170,171,172,173,174,176,177,178,179,180,181,182,184,185,186,187,188,189,190,192,193,195,207,216,220,221,229,238,239,240,242,246,249,250,254,255,256,259,260,261,263,264,267,269,270,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,312,313,315,317,318,319,320,321,323,325,326,330,342,344,346,359,362,363,365,367,368,370,371,372,373,374,375,376,377,379,381,386,387,392,393,394,395,396,397,398,399,401,402,403,404,405,406,407,408,409,410,413,416,417,419,420,424,425,434,435,436,441,447,449,450,452,455,457,458,461,462,463,464,466,467,468,470,472,473,477,479,480,485,487,488,489,490,491,503,504,505,506,507,509,510,511,513,516,518,520,524,525,526,528,529,530,],[-119,-117,-118,-68,-28,-166,-27,-308,-310,-69,-83,-310,174,-167,174,-294,-28,174,-310,-309,174,-28,174,-310,174,-302,174,-267,291,-257,-265,-306,-298,-284,-296,174,-285,-259,-304,-268,174,-301,-286,-238,-295,-297,-299,-310,-269,-303,-283,-271,-270,-266,174,-300,174,-310,174,-266,174,174,-78,-199,174,-200,-72,-73,174,-198,-76,-294,-75,174,-77,-74,174,174,-266,174,174,-263,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,-225,-232,-234,-226,-224,-233,-229,-230,174,-231,-228,-227,174,-261,-305,174,174,-280,-279,174,-257,-262,-307,174,-11,174,-12,-260,-310,174,174,174,-214,-201,174,-218,174,174,-215,-202,174,174,174,174,-80,174,-217,-287,174,291,-242,-240,291,291,291,291,291,291,291,-239,-241,291,291,-243,291,291,291,-274,-277,-278,-275,-276,-310,-182,-28,174,-310,-266,-213,174,174,-203,-79,-205,-216,-310,-258,-264,174,174,-273,-272,174,174,-11,174,-266,174,174,-204,174,174,174,174,174,-209,-208,-80,-206,-310,-281,174,-288,174,174,-282,174,-207,-210,174,-212,-211,]),'ANDEQUAL':([130,139,159,163,165,166,167,169,171,172,173,177,178,180,181,182,186,187,188,193,256,275,308,309,313,315,318,319,320,330,386,413,416,417,419,420,462,463,467,468,510,513,520,],[-294,-309,-302,300,-306,-298,-284,-296,-285,-259,-304,-301,-286,-295,-297,-299,-303,-283,-271,-300,-294,-263,-261,-305,-280,-279,-257,-262,-307,-260,-287,-274,-277,-278,-275,-276,-258,-264,-273,-272,-281,-288,-282,]),'LAND':([130,139,159,162,163,165,166,167,169,171,172,173,177,178,179,180,181,182,186,187,188,193,256,275,308,309,313,315,318,319,320,330,386,392,393,394,395,396,397,398,399,401,402,403,404,405,406,407,408,409,410,413,416,417,419,420,462,463,467,468,510,513,520,],[-294,-309,-302,293,-257,-306,-298,-284,-296,-285,-259,-304,-301,-286,-238,-295,-297,-299,-303,-283,-271,-300,-294,-263,-261,-305,-280,-279,-257,-262,-307,-260,-287,293,-242,-240,-246,-252,-247,-244,-251,-253,-248,-239,-241,-254,-250,-243,-245,-255,-249,-274,-277,-278,-275,-276,-258,-264,-273,-272,-281,-288,-282,]),'UNSIGNED':([0,2,3,4,5,6,7,8,10,11,12,13,14,15,17,20,21,22,23,24,25,26,27,28,29,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,47,49,52,53,54,58,59,62,64,68,71,72,73,75,78,79,80,82,87,89,91,92,93,94,95,96,97,98,99,100,101,104,105,108,113,123,129,135,136,137,138,139,140,141,142,143,144,145,147,148,149,157,158,197,201,202,214,215,222,223,224,227,228,233,234,235,236,238,239,240,242,246,249,254,255,259,261,263,273,274,307,316,317,331,335,341,345,353,354,356,360,361,362,363,367,368,371,372,376,377,381,388,442,443,447,452,455,457,458,487,504,505,506,507,525,526,529,530,],[28,28,-103,-65,-112,-107,-63,-310,-64,-119,-113,-310,-101,-66,-110,28,-104,-117,-95,-52,-29,-118,-114,-111,-109,-310,-62,-106,-60,28,-105,-96,-108,-97,-68,-116,-100,-115,-98,-67,-99,-102,28,-221,-93,-90,-91,-89,-92,28,-87,-9,-10,-166,-88,-152,-308,-153,-94,28,28,-133,-132,-86,-61,-69,-53,-83,28,-84,28,28,-30,28,-167,28,28,28,-146,28,-145,-309,28,-142,-135,-130,28,28,-85,28,-70,-71,28,-154,-35,28,28,-36,-131,-143,-134,-129,-128,28,-139,28,-137,-78,-199,28,-200,-72,-73,-198,-76,-75,-77,-74,28,28,28,28,28,-155,-156,28,28,-31,-34,-144,-138,-136,-214,-201,-218,28,-215,-202,-78,-80,-217,28,-33,-32,-213,-203,-79,-205,-216,-204,-209,-208,-80,-206,-207,-210,-212,-211,]),'_COMPLEX':([0,2,3,4,5,6,7,8,10,11,12,13,14,15,17,20,21,22,23,24,25,26,27,28,29,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,47,49,52,53,54,58,59,62,64,68,71,72,73,75,78,79,80,82,87,89,91,92,93,94,95,96,97,98,99,100,101,104,105,108,113,123,129,135,136,137,138,139,140,141,142,143,144,145,147,148,149,157,158,197,201,202,214,215,222,223,224,227,228,233,234,235,236,238,239,240,242,246,249,254,255,259,261,263,273,274,307,316,317,331,335,341,345,353,354,356,360,361,362,363,367,368,371,372,376,377,381,388,442,443,447,452,455,457,458,487,504,505,506,507,525,526,529,530,],[29,29,-103,-65,-112,-107,-63,-310,-64,-119,-113,-310,-101,-66,-110,29,-104,-117,-95,-52,-29,-118,-114,-111,-109,-310,-62,-106,-60,29,-105,-96,-108,-97,-68,-116,-100,-115,-98,-67,-99,-102,29,-221,-93,-90,-91,-89,-92,29,-87,-9,-10,-166,-88,-152,-308,-153,-94,29,29,-133,-132,-86,-61,-69,-53,-83,29,-84,29,29,-30,29,-167,29,29,29,-146,29,-145,-309,29,-142,-135,-130,29,29,-85,29,-70,-71,29,-154,-35,29,29,-36,-131,-143,-134,-129,-128,29,-139,29,-137,-78,-199,29,-200,-72,-73,-198,-76,-75,-77,-74,29,29,29,29,29,-155,-156,29,29,-31,-34,-144,-138,-136,-214,-201,-218,29,-215,-202,-78,-80,-217,29,-33,-32,-213,-203,-79,-205,-216,-204,-209,-208,-80,-206,-207,-210,-212,-211,]),'DIVEQUAL':([130,139,159,163,165,166,167,169,171,172,173,177,178,180,181,182,186,187,188,193,256,275,308,309,313,315,318,319,320,330,386,413,416,417,419,420,462,463,467,468,510,513,520,],[-294,-309,-302,306,-306,-298,-284,-296,-285,-259,-304,-301,-286,-295,-297,-299,-303,-283,-271,-300,-294,-263,-261,-305,-280,-279,-257,-262,-307,-260,-287,-274,-277,-278,-275,-276,-258,-264,-273,-272,-281,-288,-282,]),'INLINE':([0,2,3,4,5,6,7,8,10,11,12,13,14,15,17,21,22,23,24,25,26,27,28,29,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,47,49,52,53,54,58,59,62,64,68,79,80,82,87,89,92,93,95,96,97,98,99,100,101,105,108,123,139,142,147,148,149,157,197,201,202,214,215,224,234,236,238,239,240,242,246,249,254,255,259,261,263,331,335,341,345,353,354,360,361,362,363,367,368,371,372,376,377,381,388,442,443,447,452,455,457,458,487,504,505,506,507,525,526,529,530,],[42,42,-103,-65,-112,-107,-63,42,-64,-119,-113,42,-101,-66,-110,-104,-117,-95,-52,-29,-118,-114,-111,-109,42,-62,-106,-60,42,-105,-96,-108,-97,-68,-116,-100,-115,-98,-67,-99,-102,42,-221,-93,-90,-91,-89,-92,42,-152,-308,-153,-94,42,-133,-132,-61,-69,-53,-83,42,-84,42,-30,42,42,-309,-135,-85,42,-70,-71,-154,-35,42,42,-36,-134,-139,-137,-78,-199,42,-200,-72,-73,-198,-76,-75,-77,-74,-155,-156,42,42,-31,-34,-138,-136,-214,-201,-218,42,-215,-202,-78,-80,-217,42,-33,-32,-213,-203,-79,-205,-216,-204,-209,-208,-80,-206,-207,-210,-212,-211,]),'PLUS':([11,22,26,40,74,75,76,80,90,96,98,109,112,113,121,130,132,133,134,139,148,154,155,156,158,159,160,161,162,163,164,165,166,167,169,170,171,172,173,174,176,177,178,179,180,181,182,184,185,186,187,188,189,190,192,193,195,207,216,220,221,229,238,239,240,242,246,249,250,254,255,256,259,260,261,263,264,267,269,270,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,312,313,315,317,318,319,320,321,323,325,326,330,342,344,346,359,362,363,365,367,368,370,371,372,373,374,375,376,377,379,381,386,387,392,393,394,395,396,397,398,399,401,402,403,404,405,406,407,408,409,410,413,416,417,419,420,424,425,434,435,436,441,447,449,450,452,455,457,458,461,462,463,464,466,467,468,470,472,473,477,479,480,485,487,488,489,490,491,503,504,505,506,507,509,510,511,513,516,518,520,524,525,526,528,529,530,],[-119,-117,-118,-68,-28,-166,-27,-308,-310,-69,-83,-310,161,-167,161,-294,-28,161,-310,-309,161,-28,161,-310,161,-302,161,-267,277,-257,-265,-306,-298,-284,-296,161,-285,-259,-304,-268,161,-301,-286,-238,-295,-297,-299,-310,-269,-303,-283,-271,-270,-266,161,-300,161,-310,161,-266,161,161,-78,-199,161,-200,-72,-73,161,-198,-76,-294,-75,161,-77,-74,161,161,-266,161,161,-263,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,-225,-232,-234,-226,-224,-233,-229,-230,161,-231,-228,-227,161,-261,-305,161,161,-280,-279,161,-257,-262,-307,161,-11,161,-12,-260,-310,161,161,161,-214,-201,161,-218,161,161,-215,-202,161,161,161,161,-80,161,-217,-287,161,277,-242,-240,277,277,277,277,277,277,277,-239,-241,277,277,-243,277,277,277,-274,-277,-278,-275,-276,-310,-182,-28,161,-310,-266,-213,161,161,-203,-79,-205,-216,-310,-258,-264,161,161,-273,-272,161,161,-11,161,-266,161,161,-204,161,161,161,161,161,-209,-208,-80,-206,-310,-281,161,-288,161,161,-282,161,-207,-210,161,-212,-211,]),'WSTRING_LITERAL':([11,22,26,40,74,75,76,80,90,96,98,109,112,113,121,132,133,134,139,148,154,155,156,158,160,161,164,165,170,174,176,178,184,185,189,190,192,195,207,216,220,221,229,238,239,240,242,246,249,250,254,255,259,260,261,263,264,267,269,270,274,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,310,312,317,320,321,323,325,326,342,344,346,359,362,363,365,367,368,370,371,372,373,374,375,376,377,379,381,387,424,425,434,435,436,441,447,449,450,452,455,457,458,461,464,466,470,472,473,477,479,480,485,487,488,489,490,491,503,504,505,506,507,509,511,516,518,524,525,526,528,529,530,],[-119,-117,-118,-68,-28,-166,-27,-308,-310,-69,-83,-310,165,-167,165,-28,165,-310,-309,165,-28,165,-310,165,165,-267,-265,-306,165,-268,165,320,-310,-269,-270,-266,165,165,-310,165,-266,165,165,-78,-199,165,-200,-72,-73,165,-198,-76,-75,165,-77,-74,165,165,-266,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,165,-225,-232,-234,-226,-224,-233,-229,-230,165,-231,-228,-227,165,165,165,165,-307,165,-11,165,-12,-310,165,165,165,-214,-201,165,-218,165,165,-215,-202,165,165,165,165,-80,165,-217,165,-310,-182,-28,165,-310,-266,-213,165,165,-203,-79,-205,-216,-310,165,165,165,165,-11,165,-266,165,165,-204,165,165,165,165,165,-209,-208,-80,-206,-310,165,165,165,165,-207,-210,165,-212,-211,]),'GOTO':([40,80,96,98,139,148,238,239,240,242,246,249,254,255,259,260,261,263,362,363,367,371,372,373,376,377,379,381,447,450,452,455,457,458,487,488,489,490,504,505,506,507,518,524,525,526,528,529,530,],[-68,-308,-69,-83,-309,244,-78,-199,244,-200,-72,-73,-198,-76,-75,244,-77,-74,-214,-201,-218,-215,-202,244,244,-80,244,-217,-213,244,-203,-79,-205,-216,-204,244,244,244,-209,-208,-80,-206,244,244,-207,-210,244,-212,-211,]),'ELLIPSIS':([214,],[351,]),'TIMESEQUAL':([130,139,159,163,165,166,167,169,171,172,173,177,178,180,181,182,186,187,188,193,256,275,308,309,313,315,318,319,320,330,386,413,416,417,419,420,462,463,467,468,510,513,520,],[-294,-309,-302,298,-306,-298,-284,-296,-285,-259,-304,-301,-286,-295,-297,-299,-303,-283,-271,-300,-294,-263,-261,-305,-280,-279,-257,-262,-307,-260,-287,-274,-277,-278,-275,-276,-258,-264,-273,-272,-281,-288,-282,]),'NOT':([11,22,26,40,74,75,76,80,90,96,98,109,112,113,121,132,133,134,139,148,154,155,156,158,160,161,164,170,174,176,184,185,189,190,192,195,207,216,220,221,229,238,239,240,242,246,249,250,254,255,259,260,261,263,264,267,269,270,274,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,310,312,317,321,323,325,326,342,344,346,359,362,363,365,367,368,370,371,372,373,374,375,376,377,379,381,387,424,425,434,435,436,441,447,449,450,452,455,457,458,461,464,466,470,472,473,477,479,480,485,487,488,489,490,491,503,504,505,506,507,509,511,516,518,524,525,526,528,529,530,],[-119,-117,-118,-68,-28,-166,-27,-308,-310,-69,-83,-310,185,-167,185,-28,185,-310,-309,185,-28,185,-310,185,185,-267,-265,185,-268,185,-310,-269,-270,-266,185,185,-310,185,-266,185,185,-78,-199,185,-200,-72,-73,185,-198,-76,-75,185,-77,-74,185,185,-266,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,185,-225,-232,-234,-226,-224,-233,-229,-230,185,-231,-228,-227,185,185,185,185,185,-11,185,-12,-310,185,185,185,-214,-201,185,-218,185,185,-215,-202,185,185,185,185,-80,185,-217,185,-310,-182,-28,185,-310,-266,-213,185,185,-203,-79,-205,-216,-310,185,185,185,185,-11,185,-266,185,185,-204,185,185,185,185,185,-209,-208,-80,-206,-310,185,185,185,185,-207,-210,185,-212,-211,]),'RSHIFTEQUAL':([130,139,159,163,165,166,167,169,171,172,173,177,178,180,181,182,186,187,188,193,256,275,308,309,313,315,318,319,320,330,386,413,416,417,419,420,462,463,467,468,510,513,520,],[-294,-309,-302,296,-306,-298,-284,-296,-285,-259,-304,-301,-286,-295,-297,-299,-303,-283,-271,-300,-294,-263,-261,-305,-280,-279,-257,-262,-307,-260,-287,-274,-277,-278,-275,-276,-258,-264,-273,-272,-281,-288,-282,]),'LT':([130,139,159,162,163,165,166,167,169,171,172,173,177,178,179,180,181,182,186,187,188,193,256,275,308,309,313,315,318,319,320,330,386,392,393,394,395,396,397,398,399,401,402,403,404,405,406,407,408,409,410,413,416,417,419,420,462,463,467,468,510,513,520,],[-294,-309,-302,279,-257,-306,-298,-284,-296,-285,-259,-304,-301,-286,-238,-295,-297,-299,-303,-283,-271,-300,-294,-263,-261,-305,-280,-279,-257,-262,-307,-260,-287,279,-242,-240,-246,279,-247,-244,279,279,-248,-239,-241,279,279,-243,-245,279,-249,-274,-277,-278,-275,-276,-258,-264,-273,-272,-281,-288,-282,]),'FOR':([40,80,96,98,139,148,238,239,240,242,246,249,254,255,259,260,261,263,362,363,367,371,372,373,376,377,379,381,447,450,452,455,457,458,487,488,489,490,504,505,506,507,518,524,525,526,528,529,530,],[-68,-308,-69,-83,-309,248,-78,-199,248,-200,-72,-73,-198,-76,-75,248,-77,-74,-214,-201,-218,-215,-202,248,248,-80,248,-217,-213,248,-203,-79,-205,-216,-204,248,248,248,-209,-208,-80,-206,248,248,-207,-210,248,-212,-211,]),'WCHAR_CONST':([11,22,26,40,74,75,76,80,90,96,98,109,112,113,121,132,133,134,139,148,154,155,156,158,160,161,164,170,174,176,184,185,189,190,192,195,207,216,220,221,229,238,239,240,242,246,249,250,254,255,259,260,261,263,264,267,269,270,274,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,310,312,317,321,323,325,326,342,344,346,359,362,363,365,367,368,370,371,372,373,374,375,376,377,379,381,387,424,425,434,435,436,441,447,449,450,452,455,457,458,461,464,466,470,472,473,477,479,480,485,487,488,489,490,491,503,504,505,506,507,509,511,516,518,524,525,526,528,529,530,],[-119,-117,-118,-68,-28,-166,-27,-308,-310,-69,-83,-310,186,-167,186,-28,186,-310,-309,186,-28,186,-310,186,186,-267,-265,186,-268,186,-310,-269,-270,-266,186,186,-310,186,-266,186,186,-78,-199,186,-200,-72,-73,186,-198,-76,-75,186,-77,-74,186,186,-266,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,-225,-232,-234,-226,-224,-233,-229,-230,186,-231,-228,-227,186,186,186,186,186,-11,186,-12,-310,186,186,186,-214,-201,186,-218,186,186,-215,-202,186,186,186,186,-80,186,-217,186,-310,-182,-28,186,-310,-266,-213,186,186,-203,-79,-205,-216,-310,186,186,186,186,-11,186,-266,186,186,-204,186,186,186,186,186,-209,-208,-80,-206,-310,186,186,186,186,-207,-210,186,-212,-211,]),'PPHASH':([0,4,7,10,15,32,34,35,40,45,95,96,98,139,149,157,372,],[45,-65,-63,-64,-66,-62,-60,45,-68,-67,-61,-69,-83,-309,-70,-71,-202,]),'CASE':([40,80,96,98,139,148,238,239,240,242,246,249,254,255,259,260,261,263,362,363,367,371,372,373,376,377,379,381,447,450,452,455,457,458,487,488,489,490,504,505,506,507,518,524,525,526,528,529,530,],[-68,-308,-69,-83,-309,250,-78,-199,250,-200,-72,-73,-198,-76,-75,250,-77,-74,-214,-201,-218,-215,-202,250,250,-80,250,-217,-213,250,-203,-79,-205,-216,-204,250,250,250,-209,-208,-80,-206,250,250,-207,-210,250,-212,-211,]),'RESTRICT':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,17,21,22,23,24,25,26,27,28,29,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,47,49,52,53,54,58,59,62,64,68,74,75,79,80,82,87,89,90,91,92,93,95,96,97,98,99,100,101,105,108,109,113,123,132,134,135,136,137,138,139,140,141,142,143,144,145,147,148,149,154,156,157,158,197,201,202,207,214,215,222,223,224,227,228,233,234,235,236,238,239,240,242,246,249,254,255,259,261,263,273,274,307,316,317,331,335,341,342,345,353,354,356,360,361,362,363,367,368,371,372,376,377,381,388,434,436,442,443,447,452,455,457,458,487,504,505,506,507,525,526,529,530,],[26,26,-103,-65,-112,-107,-63,26,26,-64,-119,-113,26,-101,-66,-110,-104,-117,-95,-52,-29,-118,-114,-111,-109,26,-62,-106,-60,26,-105,-96,-108,-97,-68,-116,-100,-115,-98,-67,-99,-102,26,-221,-93,-90,-91,-89,-92,26,26,-166,-152,-308,-153,-94,26,26,26,-133,-132,-61,-69,-53,-83,26,-84,26,-30,26,26,-167,26,26,26,26,-146,26,-145,-309,26,-142,-135,-130,26,26,-85,26,-70,26,26,-71,26,-154,-35,26,26,26,-36,-131,-143,-134,-129,-128,26,-139,26,-137,-78,-199,26,-200,-72,-73,-198,-76,-75,-77,-74,26,26,26,26,26,-155,-156,26,26,26,-31,-34,-144,-138,-136,-214,-201,-218,26,-215,-202,-78,-80,-217,26,26,26,-33,-32,-213,-203,-79,-205,-216,-204,-209,-208,-80,-206,-207,-210,-212,-211,]),'CHAR_CONST':([11,22,26,40,74,75,76,80,90,96,98,109,112,113,121,132,133,134,139,148,154,155,156,158,160,161,164,170,174,176,184,185,189,190,192,195,207,216,220,221,229,238,239,240,242,246,249,250,254,255,259,260,261,263,264,267,269,270,274,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,310,312,317,321,323,325,326,342,344,346,359,362,363,365,367,368,370,371,372,373,374,375,376,377,379,381,387,424,425,434,435,436,441,447,449,450,452,455,457,458,461,464,466,470,472,473,477,479,480,485,487,488,489,490,491,503,504,505,506,507,509,511,516,518,524,525,526,528,529,530,],[-119,-117,-118,-68,-28,-166,-27,-308,-310,-69,-83,-310,159,-167,159,-28,159,-310,-309,159,-28,159,-310,159,159,-267,-265,159,-268,159,-310,-269,-270,-266,159,159,-310,159,-266,159,159,-78,-199,159,-200,-72,-73,159,-198,-76,-75,159,-77,-74,159,159,-266,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,-225,-232,-234,-226,-224,-233,-229,-230,159,-231,-228,-227,159,159,159,159,159,-11,159,-12,-310,159,159,159,-214,-201,159,-218,159,159,-215,-202,159,159,159,159,-80,159,-217,159,-310,-182,-28,159,-310,-266,-213,159,159,-203,-79,-205,-216,-310,159,159,159,159,-11,159,-266,159,159,-204,159,159,159,159,159,-209,-208,-80,-206,-310,159,159,159,159,-207,-210,159,-212,-211,]),'INT_CONST_DEC':([11,22,26,40,74,75,76,80,90,96,98,109,112,113,121,132,133,134,139,148,154,155,156,158,160,161,164,170,174,176,184,185,189,190,192,195,207,216,220,221,229,238,239,240,242,246,249,250,254,255,259,260,261,263,264,267,269,270,274,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,310,312,317,321,323,325,326,342,344,346,359,362,363,365,367,368,370,371,372,373,374,375,376,377,379,381,387,424,425,434,435,436,441,447,449,450,452,455,457,458,461,464,466,470,472,473,477,479,480,485,487,488,489,490,491,503,504,505,506,507,509,511,516,518,524,525,526,528,529,530,],[-119,-117,-118,-68,-28,-166,-27,-308,-310,-69,-83,-310,180,-167,180,-28,180,-310,-309,180,-28,180,-310,180,180,-267,-265,180,-268,180,-310,-269,-270,-266,180,180,-310,180,-266,180,180,-78,-199,180,-200,-72,-73,180,-198,-76,-75,180,-77,-74,180,180,-266,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,180,-225,-232,-234,-226,-224,-233,-229,-230,180,-231,-228,-227,180,180,180,180,180,-11,180,-12,-310,180,180,180,-214,-201,180,-218,180,180,-215,-202,180,180,180,180,-80,180,-217,180,-310,-182,-28,180,-310,-266,-213,180,180,-203,-79,-205,-216,-310,180,180,180,180,-11,180,-266,180,180,-204,180,180,180,180,180,-209,-208,-80,-206,-310,180,180,180,180,-207,-210,180,-212,-211,]),'WHILE':([40,80,96,98,139,148,238,239,240,242,246,249,254,255,259,260,261,263,362,363,367,371,372,373,376,377,378,379,381,447,450,452,455,457,458,487,488,489,490,504,505,506,507,518,524,525,526,528,529,530,],[-68,-308,-69,-83,-309,251,-78,-199,251,-200,-72,-73,-198,-76,-75,251,-77,-74,-214,-201,-218,-215,-202,251,251,-80,456,251,-217,-213,251,-203,-79,-205,-216,-204,251,251,251,-209,-208,-80,-206,251,251,-207,-210,251,-212,-211,]),'_BOOL':([0,2,3,4,5,6,7,8,10,11,12,13,14,15,17,20,21,22,23,24,25,26,27,28,29,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,47,49,52,53,54,58,59,62,64,68,71,72,73,75,78,79,80,82,87,89,91,92,93,94,95,96,97,98,99,100,101,104,105,108,113,123,129,135,136,137,138,139,140,141,142,143,144,145,147,148,149,157,158,197,201,202,214,215,222,223,224,227,228,233,234,235,236,238,239,240,242,246,249,254,255,259,261,263,273,274,307,316,317,331,335,341,345,353,354,356,360,361,362,363,367,368,371,372,376,377,381,388,442,443,447,452,455,457,458,487,504,505,506,507,525,526,529,530,],[49,49,-103,-65,-112,-107,-63,-310,-64,-119,-113,-310,-101,-66,-110,49,-104,-117,-95,-52,-29,-118,-114,-111,-109,-310,-62,-106,-60,49,-105,-96,-108,-97,-68,-116,-100,-115,-98,-67,-99,-102,49,-221,-93,-90,-91,-89,-92,49,-87,-9,-10,-166,-88,-152,-308,-153,-94,49,49,-133,-132,-86,-61,-69,-53,-83,49,-84,49,49,-30,49,-167,49,49,49,-146,49,-145,-309,49,-142,-135,-130,49,49,-85,49,-70,-71,49,-154,-35,49,49,-36,-131,-143,-134,-129,-128,49,-139,49,-137,-78,-199,49,-200,-72,-73,-198,-76,-75,-77,-74,49,49,49,49,49,-155,-156,49,49,-31,-34,-144,-138,-136,-214,-201,-218,49,-215,-202,-78,-80,-217,49,-33,-32,-213,-203,-79,-205,-216,-204,-209,-208,-80,-206,-207,-210,-212,-211,]),'STRING_LITERAL':([11,22,26,40,74,75,76,80,90,96,98,109,112,113,121,132,133,134,139,148,154,155,156,158,160,161,164,170,171,173,174,176,184,185,189,190,192,195,207,216,220,221,229,238,239,240,242,246,249,250,254,255,259,260,261,263,264,267,269,270,274,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,309,310,312,317,321,323,325,326,342,344,346,359,362,363,365,367,368,370,371,372,373,374,375,376,377,379,381,387,424,425,434,435,436,441,447,449,450,452,455,457,458,461,464,466,470,472,473,477,479,480,485,487,488,489,490,491,503,504,505,506,507,509,511,516,518,524,525,526,528,529,530,],[-119,-117,-118,-68,-28,-166,-27,-308,-310,-69,-83,-310,173,-167,173,-28,173,-310,-309,173,-28,173,-310,173,173,-267,-265,173,309,-304,-268,173,-310,-269,-270,-266,173,173,-310,173,-266,173,173,-78,-199,173,-200,-72,-73,173,-198,-76,-75,173,-77,-74,173,173,-266,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,173,-225,-232,-234,-226,-224,-233,-229,-230,173,-231,-228,-227,173,-305,173,173,173,173,-11,173,-12,-310,173,173,173,-214,-201,173,-218,173,173,-215,-202,173,173,173,173,-80,173,-217,173,-310,-182,-28,173,-310,-266,-213,173,173,-203,-79,-205,-216,-310,173,173,173,173,-11,173,-266,173,173,-204,173,173,173,173,173,-209,-208,-80,-206,-310,173,173,173,173,-207,-210,173,-212,-211,]),'MINUSEQUAL':([130,139,159,163,165,166,167,169,171,172,173,177,178,180,181,182,186,187,188,193,256,275,308,309,313,315,318,319,320,330,386,413,416,417,419,420,462,463,467,468,510,513,520,],[-294,-309,-302,302,-306,-298,-284,-296,-285,-259,-304,-301,-286,-295,-297,-299,-303,-283,-271,-300,-294,-263,-261,-305,-280,-279,-257,-262,-307,-260,-287,-274,-277,-278,-275,-276,-258,-264,-273,-272,-281,-288,-282,]),'CONTINUE':([40,80,96,98,139,148,238,239,240,242,246,249,254,255,259,260,261,263,362,363,367,371,372,373,376,377,379,381,447,450,452,455,457,458,487,488,489,490,504,505,506,507,518,524,525,526,528,529,530,],[-68,-308,-69,-83,-309,252,-78,-199,252,-200,-72,-73,-198,-76,-75,252,-77,-74,-214,-201,-218,-215,-202,252,252,-80,252,-217,-213,252,-203,-79,-205,-216,-204,252,252,252,-209,-208,-80,-206,252,252,-207,-210,252,-212,-211,]),'LSHIFTEQUAL':([130,139,159,163,165,166,167,169,171,172,173,177,178,180,181,182,186,187,188,193,256,275,308,309,313,315,318,319,320,330,386,413,416,417,419,420,462,463,467,468,510,513,520,],[-294,-309,-302,304,-306,-298,-284,-296,-285,-259,-304,-301,-286,-295,-297,-299,-303,-283,-271,-300,-294,-263,-261,-305,-280,-279,-257,-262,-307,-260,-287,-274,-277,-278,-275,-276,-258,-264,-273,-272,-281,-288,-282,]),'STRUCT':([0,4,7,8,10,11,13,15,20,22,23,24,25,26,31,32,34,35,37,39,40,42,44,45,47,52,68,71,72,73,75,78,80,89,91,94,95,96,97,98,100,101,104,105,108,113,129,135,136,137,138,139,141,144,145,147,148,149,157,158,201,202,214,215,223,233,235,238,239,240,242,246,249,254,255,259,261,263,274,307,316,317,341,345,353,354,356,362,363,367,368,371,372,376,377,381,388,442,443,447,452,455,457,458,487,504,505,506,507,525,526,529,530,],[46,-65,-63,-310,-64,-119,-310,-66,46,-117,-95,-52,-29,-118,-310,-62,-60,46,-96,-97,-68,-100,-98,-67,-99,46,46,-87,-9,-10,-166,-88,-308,46,46,-86,-61,-69,-53,-83,-84,46,46,-30,46,-167,46,46,-146,46,-145,-309,-142,46,46,-85,46,-70,-71,46,-35,46,46,-36,-143,46,46,-78,-199,46,-200,-72,-73,-198,-76,-75,-77,-74,46,46,46,46,46,46,-31,-34,-144,-214,-201,-218,46,-215,-202,-78,-80,-217,46,-33,-32,-213,-203,-79,-205,-216,-204,-209,-208,-80,-206,-207,-210,-212,-211,]),'$end}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'parameter_declaration':([89,108,202,214,341,345,388,],[124,124,124,350,124,124,124,]),'pppragma_directive':([0,35,91,137,144,145,148,233,235,240,260,373,376,379,450,488,489,490,518,524,528,],[4,4,136,136,136,136,238,136,136,238,376,376,238,376,376,376,376,376,376,376,376,]),'typeid_declarator':([2,56,99,107,120,140,358,],[57,106,57,57,57,57,57,]),'type_qualifier_list_opt':([9,90,109,134,156,207,342,436,],[77,133,155,221,270,344,435,480,]),'storage_class_specifier':([0,2,8,13,31,35,52,68,89,99,101,108,123,148,202,214,240,341,345,368,388,],[8,58,8,8,8,8,8,8,8,58,8,8,58,8,8,8,8,8,8,8,8,]),'typeid_noparen_declarator':([123,],[204,]),'pp_directive':([0,35,],[10,10,]),'statement':([148,240,260,373,376,379,450,488,489,490,518,524,528,],[239,239,377,377,455,377,377,377,377,506,377,377,377,]),'typedef_name':([0,20,35,52,68,89,91,101,104,108,129,135,137,144,145,148,158,202,214,233,235,240,274,307,316,317,341,345,368,388,],[12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,]),'function_specifier':([0,2,8,13,31,35,52,68,89,99,101,108,123,148,202,214,240,341,345,368,388,],[13,59,13,13,13,13,13,13,13,59,13,13,59,13,13,13,13,13,13,13,13,]),'declaration_list':([52,68,],[101,101,]),'enumerator':([81,115,119,196,],[118,118,118,334,]),'expression':([148,158,240,260,264,274,284,307,312,317,368,370,373,374,375,376,379,449,450,485,488,489,490,491,503,511,516,518,524,528,],[241,271,241,241,380,271,400,271,418,271,241,451,241,453,454,241,241,241,241,241,241,241,241,508,241,521,241,241,241,241,]),'declaration_specifiers_no_type_opt':([8,13,31,],[71,78,94,]),'primary_expression':([112,121,133,148,155,158,160,170,176,192,195,216,221,229,240,250,260,264,267,270,274,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,303,307,310,312,317,321,325,344,346,359,365,368,370,373,374,375,376,379,387,435,449,450,464,466,470,472,477,480,485,488,489,490,491,503,511,516,518,524,528,],[188,188,188,188,188,188,188,188,188,188,188,188,188,188,188,188,188,188,188,188,188,188,188,188,188,188,188,188,188,188,188,188,188,188,188,188,188,188,188,188,188,188,188,188,188,188,188,188,188,188,188,188,188,188,188,188,188,188,188,188,188,188,188,188,188,188,188,188,188,188,188,188,188,188,188,188,188,188,188,]),'empty':([0,2,8,9,13,20,31,52,68,89,90,99,104,108,109,123,133,134,140,148,155,156,184,202,207,240,260,273,341,342,344,345,346,368,373,376,379,388,424,435,436,449,450,461,485,488,489,490,503,509,516,518,524,528,],[19,60,72,76,72,85,72,103,103,128,76,60,85,128,76,205,217,76,231,243,217,76,323,340,76,364,364,205,128,76,217,340,217,364,364,364,364,340,473,217,76,364,364,473,364,364,364,364,364,473,364,364,364,364,]),'postfix_expression':([112,121,133,148,155,158,160,170,176,192,195,216,221,229,240,250,260,264,267,270,274,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,303,307,310,312,317,321,325,344,346,359,365,368,370,373,374,375,376,379,387,435,449,450,464,466,470,472,477,480,485,488,489,490,491,503,511,516,518,524,528,],[172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,]),'abstract_declarator_opt':([123,273,],[206,390,]),'id_init_declarator':([20,104,],[86,86,]),'direct_id_declarator':([0,1,2,20,35,48,56,66,99,104,107,120,123,140,202,211,339,358,],[24,24,24,24,24,97,24,97,24,24,24,24,24,24,24,97,97,24,]),'constant':([112,121,133,148,155,158,160,170,176,192,195,216,221,229,240,250,260,264,267,270,274,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,303,307,310,312,317,321,325,344,346,359,365,368,370,373,374,375,376,379,387,435,449,450,464,466,470,472,477,480,485,488,489,490,491,503,511,516,518,524,528,],[167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,]),'abstract_declarator':([123,202,273,388,],[210,338,210,338,]),'struct_or_union':([0,20,35,52,68,89,91,101,104,108,129,135,137,144,145,148,158,202,214,233,235,240,274,307,316,317,341,345,368,388,],[30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,]),'initializer_list_opt':([184,],[329,]),'type_qualifier':([0,2,8,9,13,31,35,52,68,74,89,90,91,99,101,108,109,123,132,134,135,137,140,144,145,148,154,156,158,202,207,214,233,235,240,273,274,307,316,317,341,342,345,368,388,434,436,],[31,62,31,75,31,31,31,31,31,113,31,75,75,62,31,31,75,62,113,75,113,75,227,75,75,31,113,75,75,31,75,31,75,75,31,227,75,75,75,75,31,75,31,31,31,113,75,]),'unified_string_literal':([112,121,133,148,155,158,160,170,176,192,195,216,221,229,240,250,260,264,267,270,274,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,303,307,310,312,317,321,325,344,346,359,365,368,370,373,374,375,376,379,387,435,449,450,464,466,470,472,477,480,485,488,489,490,491,503,511,516,518,524,528,],[171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,]),'type_qualifier_list':([9,90,91,109,134,137,144,145,156,158,207,233,235,274,307,316,317,342,436,],[74,132,135,154,74,135,135,135,74,135,74,135,135,135,135,135,135,434,74,]),'initializer_list':([184,461,],[322,492,]),'enumerator_list':([81,115,119,],[117,194,198,]),'identifier_list_opt':([89,108,341,],[131,153,433,]),'struct_declarator':([140,358,],[226,444,]),'external_declaration':([0,35,],[34,95,]),'translation_unit':([0,],[35,]),'labeled_statement':([148,240,260,373,376,379,450,488,489,490,518,524,528,],[246,246,246,246,246,246,246,246,246,246,246,246,246,]),'assignment_expression':([112,121,133,148,155,158,216,221,240,260,264,267,270,274,284,303,307,310,312,317,325,344,346,365,368,370,373,374,375,376,379,435,449,450,466,472,477,480,485,488,489,490,491,503,511,516,518,524,528,],[183,183,218,247,218,247,352,355,247,247,247,382,385,247,247,411,247,414,247,247,183,218,218,446,247,247,247,247,247,247,247,218,247,247,494,183,498,501,247,247,247,247,247,247,247,247,247,247,247,]),'struct_declaration_list':([91,144,145,],[137,233,235,]),'struct_declarator_list':([140,],[230,]),'assignment_expression_opt':([133,155,344,346,435,],[219,268,438,440,478,]),'type_name':([158,274,307,316,317,],[272,391,412,421,422,]),'enum_specifier':([0,20,35,52,68,89,91,101,104,108,129,135,137,144,145,148,158,202,214,233,235,240,274,307,316,317,341,345,368,388,],[27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,]),'expression_statement':([148,240,260,373,376,379,450,488,489,490,518,524,528,],[249,249,249,249,249,249,249,249,249,249,249,249,249,]),'designator_list':([184,424,461,509,],[324,324,324,324,]),'initializer':([112,121,325,472,],[191,200,427,497,]),'specifier_qualifier_list':([91,137,144,145,158,233,235,274,307,316,317,],[140,140,140,140,273,140,140,273,273,273,273,]),'unified_wstring_literal':([112,121,133,148,155,158,160,170,176,192,195,216,221,229,240,250,260,264,267,270,274,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,303,307,310,312,317,321,325,344,346,359,365,368,370,373,374,375,376,379,387,435,449,450,464,466,470,472,477,480,485,488,489,490,491,503,511,516,518,524,528,],[178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,178,]),'identifier':([89,108,112,121,133,148,155,158,160,170,176,192,195,213,216,221,229,240,250,260,264,267,270,274,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,303,307,310,312,317,321,325,327,341,344,346,359,365,368,370,373,374,375,376,379,387,435,449,450,464,466,469,470,472,477,480,485,488,489,490,491,503,511,512,516,518,524,528,],[125,125,187,187,187,187,187,187,187,187,187,187,187,349,187,187,187,187,187,187,187,187,187,187,187,187,187,187,187,187,187,187,187,187,187,187,187,187,187,187,187,187,187,187,187,187,187,187,187,187,428,125,187,187,187,187,187,187,187,187,187,187,187,187,187,187,187,187,187,496,187,187,187,187,187,187,187,187,187,187,187,522,187,187,187,187,]),'parameter_type_list':([89,108,202,341,345,388,],[122,152,336,432,336,336,]),'declaration_specifiers':([0,35,52,68,89,101,108,148,202,214,240,341,345,368,388,],[2,2,99,99,123,99,123,99,123,123,99,123,123,99,123,]),'direct_typeid_noparen_declarator':([123,211,],[203,347,]),'block_item_list_opt':([148,],[253,]),'binary_expression':([112,121,133,148,155,158,195,216,221,229,240,250,260,264,267,270,274,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,303,307,310,312,317,321,325,344,346,359,365,368,370,373,374,375,376,379,435,449,450,464,466,472,477,480,485,488,489,490,491,503,511,516,518,524,528,],[162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,392,393,394,395,396,397,398,399,162,401,402,403,404,405,406,407,408,409,410,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,]),'function_definition':([0,35,],[32,32,]),'struct_declarator_list_opt':([140,],[225,]),'unary_expression':([112,121,133,148,155,158,160,170,176,192,195,216,221,229,240,250,260,264,267,270,274,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,303,307,310,312,317,321,325,344,346,359,365,368,370,373,374,375,376,379,387,435,449,450,464,466,470,472,477,480,485,488,489,490,491,503,511,516,518,524,528,],[163,163,163,163,163,163,275,308,318,330,318,163,163,318,163,318,163,163,163,163,163,318,318,318,318,318,318,318,318,163,318,318,318,318,318,318,318,318,318,318,163,163,163,163,163,318,163,163,163,318,163,163,163,163,163,163,163,163,318,163,163,163,318,163,318,163,163,163,163,163,163,163,163,163,163,163,163,163,163,]),'declaration':([0,35,52,68,101,148,240,368,],[7,7,100,100,147,254,254,449,]),'parameter_type_list_opt':([202,345,388,],[337,439,337,]),'id_init_declarator_list':([20,104,],[83,83,]),'iteration_statement':([148,240,260,373,376,379,450,488,489,490,518,524,528,],[255,255,255,255,255,255,255,255,255,255,255,255,255,]),'designator':([184,324,424,461,509,],[328,426,328,328,328,]),'init_declarator_list':([2,99,],[61,61,]),'identifier_list':([89,108,341,],[126,126,126,]),'id_init_declarator_list_opt':([20,104,],[84,84,]),'translation_unit_or_empty':([0,],[16,]),'pointer':([0,1,2,20,35,56,77,99,104,107,120,123,140,202,273,358,388,],[48,48,66,48,48,66,114,66,48,66,66,211,66,339,389,66,389,]),'declaration_specifiers_no_type':([0,8,13,31,35,52,68,89,101,108,148,202,214,240,341,345,368,388,],[20,73,73,73,20,104,104,129,104,129,104,129,129,104,129,129,104,129,]),'designation_opt':([184,424,461,509,],[325,472,325,472,]),'block_item_list':([148,],[240,]),'init_declarator':([2,99,107,120,],[67,67,151,199,]),'argument_expression_list':([310,],[415,]),'struct_declaration':([91,137,144,145,233,235,],[141,223,141,141,223,223,]),'declaration_list_opt':([52,68,],[102,111,]),'constant_expression':([195,229,250,321,359,],[333,357,369,423,445,]),'assignment_operator':([163,],[303,]),'unary_operator':([112,121,133,148,155,158,160,170,176,192,195,216,221,229,240,250,260,264,267,270,274,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,303,307,310,312,317,321,325,344,346,359,365,368,370,373,374,375,376,379,387,435,449,450,464,466,470,472,477,480,485,488,489,490,491,503,511,516,518,524,528,],[176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,176,]),'expression_opt':([148,240,260,368,373,376,379,449,450,485,488,489,490,503,516,518,524,528,],[245,245,245,448,245,245,245,486,245,502,245,245,245,517,523,245,245,245,]),'selection_statement':([148,240,260,373,376,379,450,488,489,490,518,524,528,],[259,259,259,259,259,259,259,259,259,259,259,259,259,]),'direct_abstract_declarator':([123,202,211,273,339,388,389,],[209,209,348,209,348,209,348,]),'cast_expression':([112,121,133,148,155,158,176,195,216,221,229,240,250,260,264,267,270,274,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,303,307,310,312,317,321,325,344,346,359,365,368,370,373,374,375,376,379,387,435,449,450,464,466,470,472,477,480,485,488,489,490,491,503,511,516,518,524,528,],[179,179,179,179,179,179,319,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,179,462,179,179,179,179,179,462,179,179,179,179,179,179,179,179,179,179,179,179,179,179,]),'jump_statement':([148,240,260,373,376,379,450,488,489,490,518,524,528,],[261,261,261,261,261,261,261,261,261,261,261,261,261,]),'offsetof_member_designator':([469,],[495,]),'direct_typeid_declarator':([2,56,66,99,107,120,140,358,],[63,63,110,63,63,63,63,63,]),'type_specifier_no_typeid':([0,2,20,35,52,68,89,91,99,101,104,108,123,129,135,137,140,144,145,148,158,202,214,233,235,240,273,274,307,316,317,341,345,368,388,],[41,64,41,41,41,41,41,41,64,41,41,41,64,41,41,41,228,41,41,41,41,41,41,41,41,41,228,41,41,41,41,41,41,41,41,]),'pragmacomp_or_statement':([260,373,379,450,488,489,490,518,524,528,],[378,452,457,487,504,505,507,525,529,530,]),'conditional_expression':([112,121,133,148,155,158,195,216,221,229,240,250,260,264,267,270,274,284,303,307,310,312,317,321,325,344,346,359,365,368,370,373,374,375,376,379,435,449,450,464,466,472,477,480,485,488,489,490,491,503,511,516,518,524,528,],[168,168,168,168,168,168,332,168,168,332,168,332,168,168,168,168,168,168,168,168,168,168,168,332,168,168,168,332,168,168,168,168,168,168,168,168,168,168,168,493,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,]),'brace_open':([18,30,79,82,92,93,102,111,112,121,148,240,260,325,373,376,379,387,450,463,465,470,472,488,489,490,518,524,528,],[81,91,115,119,144,145,148,148,184,184,148,148,148,184,148,148,148,461,148,461,461,461,184,148,148,148,148,148,148,]),'struct_or_union_specifier':([0,20,35,52,68,89,91,101,104,108,129,135,137,144,145,148,158,202,214,233,235,240,274,307,316,317,341,345,368,388,],[43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,]),'block_item':([148,240,],[242,363,]),'init_declarator_list_opt':([2,99,],[65,65,]),'designation':([184,424,461,509,],[326,326,326,326,]),'decl_body':([0,35,52,68,101,148,240,368,],[50,50,50,50,50,50,50,50,]),'id_declarator':([0,1,2,20,35,56,99,104,107,120,123,140,202,358,],[52,55,68,88,52,55,146,88,146,146,212,146,55,146,]),'parameter_list':([89,108,202,341,345,388,],[127,127,127,127,127,127,]),'declarator':([2,99,107,120,140,358,],[69,69,69,69,232,232,]),'brace_close':([91,117,137,144,145,194,198,233,235,253,329,424,492,509,],[142,197,224,234,236,331,335,360,361,372,429,474,510,520,]),'type_specifier':([0,20,35,52,68,89,91,101,104,108,129,135,137,144,145,148,158,202,214,233,235,240,274,307,316,317,341,345,368,388,],[54,87,54,54,54,54,143,54,87,54,87,222,143,143,143,54,143,54,54,143,143,54,143,143,143,143,54,54,54,54,]),'compound_statement':([102,111,148,240,260,373,376,379,450,488,489,490,518,524,528,],[149,157,263,263,263,263,263,263,263,263,263,263,263,263,263,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> translation_unit_or_empty","S'",1,None,None,None),
  ('abstract_declarator_opt -> empty','abstract_declarator_opt',1,'p_abstract_declarator_opt','plyparser.py',43),
  ('abstract_declarator_opt -> abstract_declarator','abstract_declarator_opt',1,'p_abstract_declarator_opt','plyparser.py',44),
  ('assignment_expression_opt -> empty','assignment_expression_opt',1,'p_assignment_expression_opt','plyparser.py',43),
  ('assignment_expression_opt -> assignment_expression','assignment_expression_opt',1,'p_assignment_expression_opt','plyparser.py',44),
  ('block_item_list_opt -> empty','block_item_list_opt',1,'p_block_item_list_opt','plyparser.py',43),
  ('block_item_list_opt -> block_item_list','block_item_list_opt',1,'p_block_item_list_opt','plyparser.py',44),
  ('declaration_list_opt -> empty','declaration_list_opt',1,'p_declaration_list_opt','plyparser.py',43),
  ('declaration_list_opt -> declaration_list','declaration_list_opt',1,'p_declaration_list_opt','plyparser.py',44),
  ('declaration_specifiers_no_type_opt -> empty','declaration_specifiers_no_type_opt',1,'p_declaration_specifiers_no_type_opt','plyparser.py',43),
  ('declaration_specifiers_no_type_opt -> declaration_specifiers_no_type','declaration_specifiers_no_type_opt',1,'p_declaration_specifiers_no_type_opt','plyparser.py',44),
  ('designation_opt -> empty','designation_opt',1,'p_designation_opt','plyparser.py',43),
  ('designation_opt -> designation','designation_opt',1,'p_designation_opt','plyparser.py',44),
  ('expression_opt -> empty','expression_opt',1,'p_expression_opt','plyparser.py',43),
  ('expression_opt -> expression','expression_opt',1,'p_expression_opt','plyparser.py',44),
  ('id_init_declarator_list_opt -> empty','id_init_declarator_list_opt',1,'p_id_init_declarator_list_opt','plyparser.py',43),
  ('id_init_declarator_list_opt -> id_init_declarator_list','id_init_declarator_list_opt',1,'p_id_init_declarator_list_opt','plyparser.py',44),
  ('identifier_list_opt -> empty','identifier_list_opt',1,'p_identifier_list_opt','plyparser.py',43),
  ('identifier_list_opt -> identifier_list','identifier_list_opt',1,'p_identifier_list_opt','plyparser.py',44),
  ('init_declarator_list_opt -> empty','init_declarator_list_opt',1,'p_init_declarator_list_opt','plyparser.py',43),
  ('init_declarator_list_opt -> init_declarator_list','init_declarator_list_opt',1,'p_init_declarator_list_opt','plyparser.py',44),
  ('initializer_list_opt -> empty','initializer_list_opt',1,'p_initializer_list_opt','plyparser.py',43),
  ('initializer_list_opt -> initializer_list','initializer_list_opt',1,'p_initializer_list_opt','plyparser.py',44),
  ('parameter_type_list_opt -> empty','parameter_type_list_opt',1,'p_parameter_type_list_opt','plyparser.py',43),
  ('parameter_type_list_opt -> parameter_type_list','parameter_type_list_opt',1,'p_parameter_type_list_opt','plyparser.py',44),
  ('struct_declarator_list_opt -> empty','struct_declarator_list_opt',1,'p_struct_declarator_list_opt','plyparser.py',43),
  ('struct_declarator_list_opt -> struct_declarator_list','struct_declarator_list_opt',1,'p_struct_declarator_list_opt','plyparser.py',44),
  ('type_qualifier_list_opt -> empty','type_qualifier_list_opt',1,'p_type_qualifier_list_opt','plyparser.py',43),
  ('type_qualifier_list_opt -> type_qualifier_list','type_qualifier_list_opt',1,'p_type_qualifier_list_opt','plyparser.py',44),
  ('direct_id_declarator -> ID','direct_id_declarator',1,'p_direct_id_declarator_1','plyparser.py',126),
  ('direct_id_declarator -> LPAREN id_declarator RPAREN','direct_id_declarator',3,'p_direct_id_declarator_2','plyparser.py',126),
  ('direct_id_declarator -> direct_id_declarator LBRACKET type_qualifier_list_opt assignment_expression_opt RBRACKET','direct_id_declarator',5,'p_direct_id_declarator_3','plyparser.py',126),
  ('direct_id_declarator -> direct_id_declarator LBRACKET STATIC type_qualifier_list_opt assignment_expression RBRACKET','direct_id_declarator',6,'p_direct_id_declarator_4','plyparser.py',126),
  ('direct_id_declarator -> direct_id_declarator LBRACKET type_qualifier_list STATIC assignment_expression RBRACKET','direct_id_declarator',6,'p_direct_id_declarator_4','plyparser.py',127),
  ('direct_id_declarator -> direct_id_declarator LBRACKET type_qualifier_list_opt TIMES RBRACKET','direct_id_declarator',5,'p_direct_id_declarator_5','plyparser.py',126),
  ('direct_id_declarator -> direct_id_declarator LPAREN parameter_type_list RPAREN','direct_id_declarator',4,'p_direct_id_declarator_6','plyparser.py',126),
  ('direct_id_declarator -> direct_id_declarator LPAREN identifier_list_opt RPAREN','direct_id_declarator',4,'p_direct_id_declarator_6','plyparser.py',127),
  ('direct_typeid_declarator -> TYPEID','direct_typeid_declarator',1,'p_direct_typeid_declarator_1','plyparser.py',126),
  ('direct_typeid_declarator -> LPAREN typeid_declarator RPAREN','direct_typeid_declarator',3,'p_direct_typeid_declarator_2','plyparser.py',126),
  ('direct_typeid_declarator -> direct_typeid_declarator LBRACKET type_qualifier_list_opt assignment_expression_opt RBRACKET','direct_typeid_declarator',5,'p_direct_typeid_declarator_3','plyparser.py',126),
  ('direct_typeid_declarator -> direct_typeid_declarator LBRACKET STATIC type_qualifier_list_opt assignment_expression RBRACKET','direct_typeid_declarator',6,'p_direct_typeid_declarator_4','plyparser.py',126),
  ('direct_typeid_declarator -> direct_typeid_declarator LBRACKET type_qualifier_list STATIC assignment_expression RBRACKET','direct_typeid_declarator',6,'p_direct_typeid_declarator_4','plyparser.py',127),
  ('direct_typeid_declarator -> direct_typeid_declarator LBRACKET type_qualifier_list_opt TIMES RBRACKET','direct_typeid_declarator',5,'p_direct_typeid_declarator_5','plyparser.py',126),
  ('direct_typeid_declarator -> direct_typeid_declarator LPAREN parameter_type_list RPAREN','direct_typeid_declarator',4,'p_direct_typeid_declarator_6','plyparser.py',126),
  ('direct_typeid_declarator -> direct_typeid_declarator LPAREN identifier_list_opt RPAREN','direct_typeid_declarator',4,'p_direct_typeid_declarator_6','plyparser.py',127),
  ('direct_typeid_noparen_declarator -> TYPEID','direct_typeid_noparen_declarator',1,'p_direct_typeid_noparen_declarator_1','plyparser.py',126),
  ('direct_typeid_noparen_declarator -> direct_typeid_noparen_declarator LBRACKET type_qualifier_list_opt assignment_expression_opt RBRACKET','direct_typeid_noparen_declarator',5,'p_direct_typeid_noparen_declarator_3','plyparser.py',126),
  ('direct_typeid_noparen_declarator -> direct_typeid_noparen_declarator LBRACKET STATIC type_qualifier_list_opt assignment_expression RBRACKET','direct_typeid_noparen_declarator',6,'p_direct_typeid_noparen_declarator_4','plyparser.py',126),
  ('direct_typeid_noparen_declarator -> direct_typeid_noparen_declarator LBRACKET type_qualifier_list STATIC assignment_expression RBRACKET','direct_typeid_noparen_declarator',6,'p_direct_typeid_noparen_declarator_4','plyparser.py',127),
  ('direct_typeid_noparen_declarator -> direct_typeid_noparen_declarator LBRACKET type_qualifier_list_opt TIMES RBRACKET','direct_typeid_noparen_declarator',5,'p_direct_typeid_noparen_declarator_5','plyparser.py',126),
  ('direct_typeid_noparen_declarator -> direct_typeid_noparen_declarator LPAREN parameter_type_list RPAREN','direct_typeid_noparen_declarator',4,'p_direct_typeid_noparen_declarator_6','plyparser.py',126),
  ('direct_typeid_noparen_declarator -> direct_typeid_noparen_declarator LPAREN identifier_list_opt RPAREN','direct_typeid_noparen_declarator',4,'p_direct_typeid_noparen_declarator_6','plyparser.py',127),
  ('id_declarator -> direct_id_declarator','id_declarator',1,'p_id_declarator_1','plyparser.py',126),
  ('id_declarator -> pointer direct_id_declarator','id_declarator',2,'p_id_declarator_2','plyparser.py',126),
  ('typeid_declarator -> direct_typeid_declarator','typeid_declarator',1,'p_typeid_declarator_1','plyparser.py',126),
  ('typeid_declarator -> pointer direct_typeid_declarator','typeid_declarator',2,'p_typeid_declarator_2','plyparser.py',126),
  ('typeid_noparen_declarator -> direct_typeid_noparen_declarator','typeid_noparen_declarator',1,'p_typeid_noparen_declarator_1','plyparser.py',126),
  ('typeid_noparen_declarator -> pointer direct_typeid_noparen_declarator','typeid_noparen_declarator',2,'p_typeid_noparen_declarator_2','plyparser.py',126),
  ('translation_unit_or_empty -> translation_unit','translation_unit_or_empty',1,'p_translation_unit_or_empty','c_parser.py',514),
  ('translation_unit_or_empty -> empty','translation_unit_or_empty',1,'p_translation_unit_or_empty','c_parser.py',515),
  ('translation_unit -> external_declaration','translation_unit',1,'p_translation_unit_1','c_parser.py',523),
  ('translation_unit -> translation_unit external_declaration','translation_unit',2,'p_translation_unit_2','c_parser.py',530),
  ('external_declaration -> function_definition','external_declaration',1,'p_external_declaration_1','c_parser.py',541),
  ('external_declaration -> declaration','external_declaration',1,'p_external_declaration_2','c_parser.py',546),
  ('external_declaration -> pp_directive','external_declaration',1,'p_external_declaration_3','c_parser.py',551),
  ('external_declaration -> pppragma_directive','external_declaration',1,'p_external_declaration_3','c_parser.py',552),
  ('external_declaration -> SEMI','external_declaration',1,'p_external_declaration_4','c_parser.py',557),
  ('pp_directive -> PPHASH','pp_directive',1,'p_pp_directive','c_parser.py',562),
  ('pppragma_directive -> PPPRAGMA','pppragma_directive',1,'p_pppragma_directive','c_parser.py',568),
  ('pppragma_directive -> PPPRAGMA PPPRAGMASTR','pppragma_directive',2,'p_pppragma_directive','c_parser.py',569),
  ('function_definition -> id_declarator declaration_list_opt compound_statement','function_definition',3,'p_function_definition_1','c_parser.py',580),
  ('function_definition -> declaration_specifiers id_declarator declaration_list_opt compound_statement','function_definition',4,'p_function_definition_2','c_parser.py',597),
  ('statement -> labeled_statement','statement',1,'p_statement','c_parser.py',608),
  ('statement -> expression_statement','statement',1,'p_statement','c_parser.py',609),
  ('statement -> compound_statement','statement',1,'p_statement','c_parser.py',610),
  ('statement -> selection_statement','statement',1,'p_statement','c_parser.py',611),
  ('statement -> iteration_statement','statement',1,'p_statement','c_parser.py',612),
  ('statement -> jump_statement','statement',1,'p_statement','c_parser.py',613),
  ('statement -> pppragma_directive','statement',1,'p_statement','c_parser.py',614),
  ('pragmacomp_or_statement -> pppragma_directive statement','pragmacomp_or_statement',2,'p_pragmacomp_or_statement','c_parser.py',661),
  ('pragmacomp_or_statement -> statement','pragmacomp_or_statement',1,'p_pragmacomp_or_statement','c_parser.py',662),
  ('decl_body -> declaration_specifiers init_declarator_list_opt','decl_body',2,'p_decl_body','c_parser.py',681),
  ('decl_body -> declaration_specifiers_no_type id_init_declarator_list_opt','decl_body',2,'p_decl_body','c_parser.py',682),
  ('declaration -> decl_body SEMI','declaration',2,'p_declaration','c_parser.py',741),
  ('declaration_list -> declaration','declaration_list',1,'p_declaration_list','c_parser.py',750),
  ('declaration_list -> declaration_list declaration','declaration_list',2,'p_declaration_list','c_parser.py',751),
  ('declaration_specifiers_no_type -> type_qualifier declaration_specifiers_no_type_opt','declaration_specifiers_no_type',2,'p_declaration_specifiers_no_type_1','c_parser.py',761),
  ('declaration_specifiers_no_type -> storage_class_specifier declaration_specifiers_no_type_opt','declaration_specifiers_no_type',2,'p_declaration_specifiers_no_type_2','c_parser.py',766),
  ('declaration_specifiers_no_type -> function_specifier declaration_specifiers_no_type_opt','declaration_specifiers_no_type',2,'p_declaration_specifiers_no_type_3','c_parser.py',771),
  ('declaration_specifiers -> declaration_specifiers type_qualifier','declaration_specifiers',2,'p_declaration_specifiers_1','c_parser.py',777),
  ('declaration_specifiers -> declaration_specifiers storage_class_specifier','declaration_specifiers',2,'p_declaration_specifiers_2','c_parser.py',782),
  ('declaration_specifiers -> declaration_specifiers function_specifier','declaration_specifiers',2,'p_declaration_specifiers_3','c_parser.py',787),
  ('declaration_specifiers -> declaration_specifiers type_specifier_no_typeid','declaration_specifiers',2,'p_declaration_specifiers_4','c_parser.py',792),
  ('declaration_specifiers -> type_specifier','declaration_specifiers',1,'p_declaration_specifiers_5','c_parser.py',797),
  ('declaration_specifiers -> declaration_specifiers_no_type type_specifier','declaration_specifiers',2,'p_declaration_specifiers_6','c_parser.py',802),
  ('storage_class_specifier -> AUTO','storage_class_specifier',1,'p_storage_class_specifier','c_parser.py',808),
  ('storage_class_specifier -> REGISTER','storage_class_specifier',1,'p_storage_class_specifier','c_parser.py',809),
  ('storage_class_specifier -> STATIC','storage_class_specifier',1,'p_storage_class_specifier','c_parser.py',810),
  ('storage_class_specifier -> EXTERN','storage_class_specifier',1,'p_storage_class_specifier','c_parser.py',811),
  ('storage_class_specifier -> TYPEDEF','storage_class_specifier',1,'p_storage_class_specifier','c_parser.py',812),
  ('function_specifier -> INLINE','function_specifier',1,'p_function_specifier','c_parser.py',817),
  ('type_specifier_no_typeid -> VOID','type_specifier_no_typeid',1,'p_type_specifier_no_typeid','c_parser.py',822),
  ('type_specifier_no_typeid -> _BOOL','type_specifier_no_typeid',1,'p_type_specifier_no_typeid','c_parser.py',823),
  ('type_specifier_no_typeid -> CHAR','type_specifier_no_typeid',1,'p_type_specifier_no_typeid','c_parser.py',824),
  ('type_specifier_no_typeid -> SHORT','type_specifier_no_typeid',1,'p_type_specifier_no_typeid','c_parser.py',825),
  ('type_specifier_no_typeid -> INT','type_specifier_no_typeid',1,'p_type_specifier_no_typeid','c_parser.py',826),
  ('type_specifier_no_typeid -> LONG','type_specifier_no_typeid',1,'p_type_specifier_no_typeid','c_parser.py',827),
  ('type_specifier_no_typeid -> FLOAT','type_specifier_no_typeid',1,'p_type_specifier_no_typeid','c_parser.py',828),
  ('type_specifier_no_typeid -> DOUBLE','type_specifier_no_typeid',1,'p_type_specifier_no_typeid','c_parser.py',829),
  ('type_specifier_no_typeid -> _COMPLEX','type_specifier_no_typeid',1,'p_type_specifier_no_typeid','c_parser.py',830),
  ('type_specifier_no_typeid -> SIGNED','type_specifier_no_typeid',1,'p_type_specifier_no_typeid','c_parser.py',831),
  ('type_specifier_no_typeid -> UNSIGNED','type_specifier_no_typeid',1,'p_type_specifier_no_typeid','c_parser.py',832),
  ('type_specifier_no_typeid -> __INT128','type_specifier_no_typeid',1,'p_type_specifier_no_typeid','c_parser.py',833),
  ('type_specifier -> typedef_name','type_specifier',1,'p_type_specifier','c_parser.py',838),
  ('type_specifier -> enum_specifier','type_specifier',1,'p_type_specifier','c_parser.py',839),
  ('type_specifier -> struct_or_union_specifier','type_specifier',1,'p_type_specifier','c_parser.py',840),
  ('type_specifier -> type_specifier_no_typeid','type_specifier',1,'p_type_specifier','c_parser.py',841),
  ('type_qualifier -> CONST','type_qualifier',1,'p_type_qualifier','c_parser.py',846),
  ('type_qualifier -> RESTRICT','type_qualifier',1,'p_type_qualifier','c_parser.py',847),
  ('type_qualifier -> VOLATILE','type_qualifier',1,'p_type_qualifier','c_parser.py',848),
  ('init_declarator_list -> init_declarator','init_declarator_list',1,'p_init_declarator_list','c_parser.py',853),
  ('init_declarator_list -> init_declarator_list COMMA init_declarator','init_declarator_list',3,'p_init_declarator_list','c_parser.py',854),
  ('init_declarator -> declarator','init_declarator',1,'p_init_declarator','c_parser.py',862),
  ('init_declarator -> declarator EQUALS initializer','init_declarator',3,'p_init_declarator','c_parser.py',863),
  ('id_init_declarator_list -> id_init_declarator','id_init_declarator_list',1,'p_id_init_declarator_list','c_parser.py',868),
  ('id_init_declarator_list -> id_init_declarator_list COMMA init_declarator','id_init_declarator_list',3,'p_id_init_declarator_list','c_parser.py',869),
  ('id_init_declarator -> id_declarator','id_init_declarator',1,'p_id_init_declarator','c_parser.py',874),
  ('id_init_declarator -> id_declarator EQUALS initializer','id_init_declarator',3,'p_id_init_declarator','c_parser.py',875),
  ('specifier_qualifier_list -> specifier_qualifier_list type_specifier_no_typeid','specifier_qualifier_list',2,'p_specifier_qualifier_list_1','c_parser.py',882),
  ('specifier_qualifier_list -> specifier_qualifier_list type_qualifier','specifier_qualifier_list',2,'p_specifier_qualifier_list_2','c_parser.py',887),
  ('specifier_qualifier_list -> type_specifier','specifier_qualifier_list',1,'p_specifier_qualifier_list_3','c_parser.py',892),
  ('specifier_qualifier_list -> type_qualifier_list type_specifier','specifier_qualifier_list',2,'p_specifier_qualifier_list_4','c_parser.py',897),
  ('struct_or_union_specifier -> struct_or_union ID','struct_or_union_specifier',2,'p_struct_or_union_specifier_1','c_parser.py',906),
  ('struct_or_union_specifier -> struct_or_union TYPEID','struct_or_union_specifier',2,'p_struct_or_union_specifier_1','c_parser.py',907),
  ('struct_or_union_specifier -> struct_or_union brace_open struct_declaration_list brace_close','struct_or_union_specifier',4,'p_struct_or_union_specifier_2','c_parser.py',917),
  ('struct_or_union_specifier -> struct_or_union brace_open brace_close','struct_or_union_specifier',3,'p_struct_or_union_specifier_2','c_parser.py',918),
  ('struct_or_union_specifier -> struct_or_union ID brace_open struct_declaration_list brace_close','struct_or_union_specifier',5,'p_struct_or_union_specifier_3','c_parser.py',935),
  ('struct_or_union_specifier -> struct_or_union ID brace_open brace_close','struct_or_union_specifier',4,'p_struct_or_union_specifier_3','c_parser.py',936),
  ('struct_or_union_specifier -> struct_or_union TYPEID brace_open struct_declaration_list brace_close','struct_or_union_specifier',5,'p_struct_or_union_specifier_3','c_parser.py',937),
  ('struct_or_union_specifier -> struct_or_union TYPEID brace_open brace_close','struct_or_union_specifier',4,'p_struct_or_union_specifier_3','c_parser.py',938),
  ('struct_or_union -> STRUCT','struct_or_union',1,'p_struct_or_union','c_parser.py',954),
  ('struct_or_union -> UNION','struct_or_union',1,'p_struct_or_union','c_parser.py',955),
  ('struct_declaration_list -> struct_declaration','struct_declaration_list',1,'p_struct_declaration_list','c_parser.py',962),
  ('struct_declaration_list -> struct_declaration_list struct_declaration','struct_declaration_list',2,'p_struct_declaration_list','c_parser.py',963),
  ('struct_declaration -> specifier_qualifier_list struct_declarator_list_opt SEMI','struct_declaration',3,'p_struct_declaration_1','c_parser.py',971),
  ('struct_declaration -> SEMI','struct_declaration',1,'p_struct_declaration_2','c_parser.py',1009),
  ('struct_declaration -> pppragma_directive','struct_declaration',1,'p_struct_declaration_3','c_parser.py',1014),
  ('struct_declarator_list -> struct_declarator','struct_declarator_list',1,'p_struct_declarator_list','c_parser.py',1019),
  ('struct_declarator_list -> struct_declarator_list COMMA struct_declarator','struct_declarator_list',3,'p_struct_declarator_list','c_parser.py',1020),
  ('struct_declarator -> declarator','struct_declarator',1,'p_struct_declarator_1','c_parser.py',1028),
  ('struct_declarator -> declarator COLON constant_expression','struct_declarator',3,'p_struct_declarator_2','c_parser.py',1033),
  ('struct_declarator -> COLON constant_expression','struct_declarator',2,'p_struct_declarator_2','c_parser.py',1034),
  ('enum_specifier -> ENUM ID','enum_specifier',2,'p_enum_specifier_1','c_parser.py',1042),
  ('enum_specifier -> ENUM TYPEID','enum_specifier',2,'p_enum_specifier_1','c_parser.py',1043),
  ('enum_specifier -> ENUM brace_open enumerator_list brace_close','enum_specifier',4,'p_enum_specifier_2','c_parser.py',1048),
  ('enum_specifier -> ENUM ID brace_open enumerator_list brace_close','enum_specifier',5,'p_enum_specifier_3','c_parser.py',1053),
  ('enum_specifier -> ENUM TYPEID brace_open enumerator_list brace_close','enum_specifier',5,'p_enum_specifier_3','c_parser.py',1054),
  ('enumerator_list -> enumerator','enumerator_list',1,'p_enumerator_list','c_parser.py',1059),
  ('enumerator_list -> enumerator_list COMMA','enumerator_list',2,'p_enumerator_list','c_parser.py',1060),
  ('enumerator_list -> enumerator_list COMMA enumerator','enumerator_list',3,'p_enumerator_list','c_parser.py',1061),
  ('enumerator -> ID','enumerator',1,'p_enumerator','c_parser.py',1072),
  ('enumerator -> ID EQUALS constant_expression','enumerator',3,'p_enumerator','c_parser.py',1073),
  ('declarator -> id_declarator','declarator',1,'p_declarator','c_parser.py',1088),
  ('declarator -> typeid_declarator','declarator',1,'p_declarator','c_parser.py',1089),
  ('pointer -> TIMES type_qualifier_list_opt','pointer',2,'p_pointer','c_parser.py',1200),
  ('pointer -> TIMES type_qualifier_list_opt pointer','pointer',3,'p_pointer','c_parser.py',1201),
  ('type_qualifier_list -> type_qualifier','type_qualifier_list',1,'p_type_qualifier_list','c_parser.py',1230),
  ('type_qualifier_list -> type_qualifier_list type_qualifier','type_qualifier_list',2,'p_type_qualifier_list','c_parser.py',1231),
  ('parameter_type_list -> parameter_list','parameter_type_list',1,'p_parameter_type_list','c_parser.py',1236),
  ('parameter_type_list -> parameter_list COMMA ELLIPSIS','parameter_type_list',3,'p_parameter_type_list','c_parser.py',1237),
  ('parameter_list -> parameter_declaration','parameter_list',1,'p_parameter_list','c_parser.py',1245),
  ('parameter_list -> parameter_list COMMA parameter_declaration','parameter_list',3,'p_parameter_list','c_parser.py',1246),
  ('parameter_declaration -> declaration_specifiers id_declarator','parameter_declaration',2,'p_parameter_declaration_1','c_parser.py',1265),
  ('parameter_declaration -> declaration_specifiers typeid_noparen_declarator','parameter_declaration',2,'p_parameter_declaration_1','c_parser.py',1266),
  ('parameter_declaration -> declaration_specifiers abstract_declarator_opt','parameter_declaration',2,'p_parameter_declaration_2','c_parser.py',1277),
  ('identifier_list -> identifier','identifier_list',1,'p_identifier_list','c_parser.py',1308),
  ('identifier_list -> identifier_list COMMA identifier','identifier_list',3,'p_identifier_list','c_parser.py',1309),
  ('initializer -> assignment_expression','initializer',1,'p_initializer_1','c_parser.py',1318),
  ('initializer -> brace_open initializer_list_opt brace_close','initializer',3,'p_initializer_2','c_parser.py',1323),
  ('initializer -> brace_open initializer_list COMMA brace_close','initializer',4,'p_initializer_2','c_parser.py',1324),
  ('initializer_list -> designation_opt initializer','initializer_list',2,'p_initializer_list','c_parser.py',1332),
  ('initializer_list -> initializer_list COMMA designation_opt initializer','initializer_list',4,'p_initializer_list','c_parser.py',1333),
  ('designation -> designator_list EQUALS','designation',2,'p_designation','c_parser.py',1344),
  ('designator_list -> designator','designator_list',1,'p_designator_list','c_parser.py',1352),
  ('designator_list -> designator_list designator','designator_list',2,'p_designator_list','c_parser.py',1353),
  ('designator -> LBRACKET constant_expression RBRACKET','designator',3,'p_designator','c_parser.py',1358),
  ('designator -> PERIOD identifier','designator',2,'p_designator','c_parser.py',1359),
  ('type_name -> specifier_qualifier_list abstract_declarator_opt','type_name',2,'p_type_name','c_parser.py',1364),
  ('abstract_declarator -> pointer','abstract_declarator',1,'p_abstract_declarator_1','c_parser.py',1375),
  ('abstract_declarator -> pointer direct_abstract_declarator','abstract_declarator',2,'p_abstract_declarator_2','c_parser.py',1383),
  ('abstract_declarator -> direct_abstract_declarator','abstract_declarator',1,'p_abstract_declarator_3','c_parser.py',1388),
  ('direct_abstract_declarator -> LPAREN abstract_declarator RPAREN','direct_abstract_declarator',3,'p_direct_abstract_declarator_1','c_parser.py',1398),
  ('direct_abstract_declarator -> direct_abstract_declarator LBRACKET assignment_expression_opt RBRACKET','direct_abstract_declarator',4,'p_direct_abstract_declarator_2','c_parser.py',1402),
  ('direct_abstract_declarator -> LBRACKET type_qualifier_list_opt assignment_expression_opt RBRACKET','direct_abstract_declarator',4,'p_direct_abstract_declarator_3','c_parser.py',1413),
  ('direct_abstract_declarator -> direct_abstract_declarator LBRACKET TIMES RBRACKET','direct_abstract_declarator',4,'p_direct_abstract_declarator_4','c_parser.py',1423),
  ('direct_abstract_declarator -> LBRACKET TIMES RBRACKET','direct_abstract_declarator',3,'p_direct_abstract_declarator_5','c_parser.py',1434),
  ('direct_abstract_declarator -> direct_abstract_declarator LPAREN parameter_type_list_opt RPAREN','direct_abstract_declarator',4,'p_direct_abstract_declarator_6','c_parser.py',1443),
  ('direct_abstract_declarator -> LPAREN parameter_type_list_opt RPAREN','direct_abstract_declarator',3,'p_direct_abstract_declarator_7','c_parser.py',1453),
  ('block_item -> declaration','block_item',1,'p_block_item','c_parser.py',1464),
  ('block_item -> statement','block_item',1,'p_block_item','c_parser.py',1465),
  ('block_item_list -> block_item','block_item_list',1,'p_block_item_list','c_parser.py',1472),
  ('block_item_list -> block_item_list block_item','block_item_list',2,'p_block_item_list','c_parser.py',1473),
  ('compound_statement -> brace_open block_item_list_opt brace_close','compound_statement',3,'p_compound_statement_1','c_parser.py',1479),
  ('labeled_statement -> ID COLON pragmacomp_or_statement','labeled_statement',3,'p_labeled_statement_1','c_parser.py',1485),
  ('labeled_statement -> CASE constant_expression COLON pragmacomp_or_statement','labeled_statement',4,'p_labeled_statement_2','c_parser.py',1489),
  ('labeled_statement -> DEFAULT COLON pragmacomp_or_statement','labeled_statement',3,'p_labeled_statement_3','c_parser.py',1493),
  ('selection_statement -> IF LPAREN expression RPAREN pragmacomp_or_statement','selection_statement',5,'p_selection_statement_1','c_parser.py',1497),
  ('selection_statement -> IF LPAREN expression RPAREN statement ELSE pragmacomp_or_statement','selection_statement',7,'p_selection_statement_2','c_parser.py',1501),
  ('selection_statement -> SWITCH LPAREN expression RPAREN pragmacomp_or_statement','selection_statement',5,'p_selection_statement_3','c_parser.py',1505),
  ('iteration_statement -> WHILE LPAREN expression RPAREN pragmacomp_or_statement','iteration_statement',5,'p_iteration_statement_1','c_parser.py',1510),
  ('iteration_statement -> DO pragmacomp_or_statement WHILE LPAREN expression RPAREN SEMI','iteration_statement',7,'p_iteration_statement_2','c_parser.py',1514),
  ('iteration_statement -> FOR LPAREN expression_opt SEMI expression_opt SEMI expression_opt RPAREN pragmacomp_or_statement','iteration_statement',9,'p_iteration_statement_3','c_parser.py',1518),
  ('iteration_statement -> FOR LPAREN declaration expression_opt SEMI expression_opt RPAREN pragmacomp_or_statement','iteration_statement',8,'p_iteration_statement_4','c_parser.py',1522),
  ('jump_statement -> GOTO ID SEMI','jump_statement',3,'p_jump_statement_1','c_parser.py',1527),
  ('jump_statement -> BREAK SEMI','jump_statement',2,'p_jump_statement_2','c_parser.py',1531),
  ('jump_statement -> CONTINUE SEMI','jump_statement',2,'p_jump_statement_3','c_parser.py',1535),
  ('jump_statement -> RETURN expression SEMI','jump_statement',3,'p_jump_statement_4','c_parser.py',1539),
  ('jump_statement -> RETURN SEMI','jump_statement',2,'p_jump_statement_4','c_parser.py',1540),
  ('expression_statement -> expression_opt SEMI','expression_statement',2,'p_expression_statement','c_parser.py',1545),
  ('expression -> assignment_expression','expression',1,'p_expression','c_parser.py',1552),
  ('expression -> expression COMMA assignment_expression','expression',3,'p_expression','c_parser.py',1553),
  ('typedef_name -> TYPEID','typedef_name',1,'p_typedef_name','c_parser.py',1565),
  ('assignment_expression -> conditional_expression','assignment_expression',1,'p_assignment_expression','c_parser.py',1569),
  ('assignment_expression -> unary_expression assignment_operator assignment_expression','assignment_expression',3,'p_assignment_expression','c_parser.py',1570),
  ('assignment_operator -> EQUALS','assignment_operator',1,'p_assignment_operator','c_parser.py',1583),
  ('assignment_operator -> XOREQUAL','assignment_operator',1,'p_assignment_operator','c_parser.py',1584),
  ('assignment_operator -> TIMESEQUAL','assignment_operator',1,'p_assignment_operator','c_parser.py',1585),
  ('assignment_operator -> DIVEQUAL','assignment_operator',1,'p_assignment_operator','c_parser.py',1586),
  ('assignment_operator -> MODEQUAL','assignment_operator',1,'p_assignment_operator','c_parser.py',1587),
  ('assignment_operator -> PLUSEQUAL','assignment_operator',1,'p_assignment_operator','c_parser.py',1588),
  ('assignment_operator -> MINUSEQUAL','assignment_operator',1,'p_assignment_operator','c_parser.py',1589),
  ('assignment_operator -> LSHIFTEQUAL','assignment_operator',1,'p_assignment_operator','c_parser.py',1590),
  ('assignment_operator -> RSHIFTEQUAL','assignment_operator',1,'p_assignment_operator','c_parser.py',1591),
  ('assignment_operator -> ANDEQUAL','assignment_operator',1,'p_assignment_operator','c_parser.py',1592),
  ('assignment_operator -> OREQUAL','assignment_operator',1,'p_assignment_operator','c_parser.py',1593),
  ('constant_expression -> conditional_expression','constant_expression',1,'p_constant_expression','c_parser.py',1598),
  ('conditional_expression -> binary_expression','conditional_expression',1,'p_conditional_expression','c_parser.py',1602),
  ('conditional_expression -> binary_expression CONDOP expression COLON conditional_expression','conditional_expression',5,'p_conditional_expression','c_parser.py',1603),
  ('binary_expression -> cast_expression','binary_expression',1,'p_binary_expression','c_parser.py',1611),
  ('binary_expression -> binary_expression TIMES binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1612),
  ('binary_expression -> binary_expression DIVIDE binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1613),
  ('binary_expression -> binary_expression MOD binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1614),
  ('binary_expression -> binary_expression PLUS binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1615),
  ('binary_expression -> binary_expression MINUS binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1616),
  ('binary_expression -> binary_expression RSHIFT binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1617),
  ('binary_expression -> binary_expression LSHIFT binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1618),
  ('binary_expression -> binary_expression LT binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1619),
  ('binary_expression -> binary_expression LE binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1620),
  ('binary_expression -> binary_expression GE binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1621),
  ('binary_expression -> binary_expression GT binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1622),
  ('binary_expression -> binary_expression EQ binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1623),
  ('binary_expression -> binary_expression NE binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1624),
  ('binary_expression -> binary_expression AND binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1625),
  ('binary_expression -> binary_expression OR binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1626),
  ('binary_expression -> binary_expression XOR binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1627),
  ('binary_expression -> binary_expression LAND binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1628),
  ('binary_expression -> binary_expression LOR binary_expression','binary_expression',3,'p_binary_expression','c_parser.py',1629),
  ('cast_expression -> unary_expression','cast_expression',1,'p_cast_expression_1','c_parser.py',1637),
  ('cast_expression -> LPAREN type_name RPAREN cast_expression','cast_expression',4,'p_cast_expression_2','c_parser.py',1641),
  ('unary_expression -> postfix_expression','unary_expression',1,'p_unary_expression_1','c_parser.py',1645),
  ('unary_expression -> PLUSPLUS unary_expression','unary_expression',2,'p_unary_expression_2','c_parser.py',1649),
  ('unary_expression -> MINUSMINUS unary_expression','unary_expression',2,'p_unary_expression_2','c_parser.py',1650),
  ('unary_expression -> unary_operator cast_expression','unary_expression',2,'p_unary_expression_2','c_parser.py',1651),
  ('unary_expression -> SIZEOF unary_expression','unary_expression',2,'p_unary_expression_3','c_parser.py',1656),
  ('unary_expression -> SIZEOF LPAREN type_name RPAREN','unary_expression',4,'p_unary_expression_3','c_parser.py',1657),
  ('unary_operator -> AND','unary_operator',1,'p_unary_operator','c_parser.py',1665),
  ('unary_operator -> TIMES','unary_operator',1,'p_unary_operator','c_parser.py',1666),
  ('unary_operator -> PLUS','unary_operator',1,'p_unary_operator','c_parser.py',1667),
  ('unary_operator -> MINUS','unary_operator',1,'p_unary_operator','c_parser.py',1668),
  ('unary_operator -> NOT','unary_operator',1,'p_unary_operator','c_parser.py',1669),
  ('unary_operator -> LNOT','unary_operator',1,'p_unary_operator','c_parser.py',1670),
  ('postfix_expression -> primary_expression','postfix_expression',1,'p_postfix_expression_1','c_parser.py',1675),
  ('postfix_expression -> postfix_expression LBRACKET expression RBRACKET','postfix_expression',4,'p_postfix_expression_2','c_parser.py',1679),
  ('postfix_expression -> postfix_expression LPAREN argument_expression_list RPAREN','postfix_expression',4,'p_postfix_expression_3','c_parser.py',1683),
  ('postfix_expression -> postfix_expression LPAREN RPAREN','postfix_expression',3,'p_postfix_expression_3','c_parser.py',1684),
  ('postfix_expression -> postfix_expression PERIOD ID','postfix_expression',3,'p_postfix_expression_4','c_parser.py',1689),
  ('postfix_expression -> postfix_expression PERIOD TYPEID','postfix_expression',3,'p_postfix_expression_4','c_parser.py',1690),
  ('postfix_expression -> postfix_expression ARROW ID','postfix_expression',3,'p_postfix_expression_4','c_parser.py',1691),
  ('postfix_expression -> postfix_expression ARROW TYPEID','postfix_expression',3,'p_postfix_expression_4','c_parser.py',1692),
  ('postfix_expression -> postfix_expression PLUSPLUS','postfix_expression',2,'p_postfix_expression_5','c_parser.py',1698),
  ('postfix_expression -> postfix_expression MINUSMINUS','postfix_expression',2,'p_postfix_expression_5','c_parser.py',1699),
  ('postfix_expression -> LPAREN type_name RPAREN brace_open initializer_list brace_close','postfix_expression',6,'p_postfix_expression_6','c_parser.py',1704),
  ('postfix_expression -> LPAREN type_name RPAREN brace_open initializer_list COMMA brace_close','postfix_expression',7,'p_postfix_expression_6','c_parser.py',1705),
  ('primary_expression -> identifier','primary_expression',1,'p_primary_expression_1','c_parser.py',1710),
  ('primary_expression -> constant','primary_expression',1,'p_primary_expression_2','c_parser.py',1714),
  ('primary_expression -> unified_string_literal','primary_expression',1,'p_primary_expression_3','c_parser.py',1718),
  ('primary_expression -> unified_wstring_literal','primary_expression',1,'p_primary_expression_3','c_parser.py',1719),
  ('primary_expression -> LPAREN expression RPAREN','primary_expression',3,'p_primary_expression_4','c_parser.py',1724),
  ('primary_expression -> OFFSETOF LPAREN type_name COMMA offsetof_member_designator RPAREN','primary_expression',6,'p_primary_expression_5','c_parser.py',1728),
  ('offsetof_member_designator -> identifier','offsetof_member_designator',1,'p_offsetof_member_designator','c_parser.py',1736),
  ('offsetof_member_designator -> offsetof_member_designator PERIOD identifier','offsetof_member_designator',3,'p_offsetof_member_designator','c_parser.py',1737),
  ('offsetof_member_designator -> offsetof_member_designator LBRACKET expression RBRACKET','offsetof_member_designator',4,'p_offsetof_member_designator','c_parser.py',1738),
  ('argument_expression_list -> assignment_expression','argument_expression_list',1,'p_argument_expression_list','c_parser.py',1750),
  ('argument_expression_list -> argument_expression_list COMMA assignment_expression','argument_expression_list',3,'p_argument_expression_list','c_parser.py',1751),
  ('identifier -> ID','identifier',1,'p_identifier','c_parser.py',1760),
  ('constant -> INT_CONST_DEC','constant',1,'p_constant_1','c_parser.py',1764),
  ('constant -> INT_CONST_OCT','constant',1,'p_constant_1','c_parser.py',1765),
  ('constant -> INT_CONST_HEX','constant',1,'p_constant_1','c_parser.py',1766),
  ('constant -> INT_CONST_BIN','constant',1,'p_constant_1','c_parser.py',1767),
  ('constant -> INT_CONST_CHAR','constant',1,'p_constant_1','c_parser.py',1768),
  ('constant -> FLOAT_CONST','constant',1,'p_constant_2','c_parser.py',1787),
  ('constant -> HEX_FLOAT_CONST','constant',1,'p_constant_2','c_parser.py',1788),
  ('constant -> CHAR_CONST','constant',1,'p_constant_3','c_parser.py',1804),
  ('constant -> WCHAR_CONST','constant',1,'p_constant_3','c_parser.py',1805),
  ('unified_string_literal -> STRING_LITERAL','unified_string_literal',1,'p_unified_string_literal','c_parser.py',1816),
  ('unified_string_literal -> unified_string_literal STRING_LITERAL','unified_string_literal',2,'p_unified_string_literal','c_parser.py',1817),
  ('unified_wstring_literal -> WSTRING_LITERAL','unified_wstring_literal',1,'p_unified_wstring_literal','c_parser.py',1827),
  ('unified_wstring_literal -> unified_wstring_literal WSTRING_LITERAL','unified_wstring_literal',2,'p_unified_wstring_literal','c_parser.py',1828),
  ('brace_open -> LBRACE','brace_open',1,'p_brace_open','c_parser.py',1838),
  ('brace_close -> RBRACE','brace_close',1,'p_brace_close','c_parser.py',1844),
  ('empty -> <empty>','empty',0,'p_empty','c_parser.py',1850),
]
